[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Takım: KODLAR VADİSİ",
    "section": "",
    "text": "Değerli ziyaretçimiz MUY665 - İş Analitiği dersi takım sayfamıza hoş geldiniz.\nBu sayfada sizlere analitik çalışmalarımızı paylaşıyoruz ve paylaşmaya devam edeceğiz.\nLütfen faaliyetlerimizi görmek için için bizi takipte kalın."
  },
  {
    "objectID": "teammembers/volkansonmez.html",
    "href": "teammembers/volkansonmez.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "team.html",
    "href": "team.html",
    "title": "Takım Üyeleri",
    "section": "",
    "text": "Use left menu to see the detailed CVs of our Team Members.\n\nTeam Members\n\nEdin_Džeko\nDušan Tadić\nFrederico Rodrigues de Paula Santos\nSebastian Szymański\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Team Members",
      "Takım Üyeleri"
    ]
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Assignment 2"
    ]
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "Data source: xxx\n\n\n\n Back to top"
  },
  {
    "objectID": "teammembers/erdidasdemir.html",
    "href": "teammembers/erdidasdemir.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts."
  },
  {
    "objectID": "team/volkansonmez.html",
    "href": "team/volkansonmez.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Project Team",
      "Assignment 2"
    ]
  },
  {
    "objectID": "team/erdidasdemir.html",
    "href": "team/erdidasdemir.html",
    "title": "Erdi Dasdemir",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts.",
    "crumbs": [
      "Team Members",
      "Erdi Dasdemir"
    ]
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Spring 2024] EMU660 Decision Making with Analytics course.\nPlease use left menu to navigate through my assignments.\n\n\n\n Back to top",
    "crumbs": [
      "Assignments",
      "My Assignments"
    ]
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project X",
    "section": "",
    "text": "Welcome to my project page.\nKeep an eye on this space to stay updated with my project activities.\n(The titles below are provided as examples; please feel free to adjust them as necessary.)"
  },
  {
    "objectID": "project.html#data-source",
    "href": "project.html#data-source",
    "title": "Project X",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\nxxxxxx"
  },
  {
    "objectID": "project.html#general-information-about-data",
    "href": "project.html#general-information-about-data",
    "title": "Project X",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nxxxxxx"
  },
  {
    "objectID": "project.html#reason-of-choice",
    "href": "project.html#reason-of-choice",
    "title": "Project X",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nxxxxxx"
  },
  {
    "objectID": "project.html#preprocessing",
    "href": "project.html#preprocessing",
    "title": "Project X",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nxxxxxx"
  },
  {
    "objectID": "project.html#exploratory-data-analysis",
    "href": "project.html#exploratory-data-analysis",
    "title": "Project X",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#trend-analysis",
    "href": "project.html#trend-analysis",
    "title": "Project X",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#model-fitting",
    "href": "project.html#model-fitting",
    "title": "Project X",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "project.html#results",
    "href": "project.html#results",
    "title": "Project X",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "team/szymanski.html",
    "href": "team/szymanski.html",
    "title": "Sebastian Szymański",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "team/edindzeko.html",
    "href": "team/edindzeko.html",
    "title": "Edin_Džeko",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts."
  },
  {
    "objectID": "team/dusantadic.html",
    "href": "team/dusantadic.html",
    "title": "Dusan Tadic",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "team/fred.html",
    "href": "team/fred.html",
    "title": "Frederico Rodrigues",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html#proje-adı",
    "href": "index.html#proje-adı",
    "title": "Takım: KODLAR VADİSİ",
    "section": "Proje Adı",
    "text": "Proje Adı\nMUY665: Lorem Lipsu Dolar Sit Amet"
  },
  {
    "objectID": "index.html#proje-konusu",
    "href": "index.html#proje-konusu",
    "title": "Takım: KODLAR VADİSİ",
    "section": "Proje Konusu",
    "text": "Proje Konusu\nMUY665: Lorem Lipsu Dolar Sit Amet"
  },
  {
    "objectID": "index.html#veri-seti-hakkında-özet-bilgi",
    "href": "index.html#veri-seti-hakkında-özet-bilgi",
    "title": "Takım: KODLAR VADİSİ",
    "section": "Veri Seti Hakkında Özet Bilgi",
    "text": "Veri Seti Hakkında Özet Bilgi\nMUY665: Lorem Lipsu Dolar Sit Amet"
  },
  {
    "objectID": "index.html#sonuçlar",
    "href": "index.html#sonuçlar",
    "title": "Takım: KODLAR VADİSİ",
    "section": "Sonuçlar",
    "text": "Sonuçlar\nLorem Lipsu Dolar Sit Amet"
  },
  {
    "objectID": "index.html#takım-üyeleri",
    "href": "index.html#takım-üyeleri",
    "title": "Takım: KODLAR VADİSİ",
    "section": "Takım Üyeleri",
    "text": "Takım Üyeleri\n\nYasin_Uluçam\nMehmet_Murathan_Yalçın\nErdem_ÖRGÜLÜ\nBurçin HOLAT\nSemanur_DEMİRTAŞ"
  },
  {
    "objectID": "portfolyo.html",
    "href": "portfolyo.html",
    "title": "Ödevler",
    "section": "",
    "text": "Bu sayfada, MUY665 İş Analitiği dersi 2023-2024 bahar dönemi boyunca yaptığımız analitik çalışmalarını sunmaktayız.\nÇalışmalarımıza sol ⬅ menüden ulaşabilirsiniz.\n\nfrom \n\n\n\n  \n  \n  \n      \n        Çalışma 1 \n      \n  \n\n Back to top",
    "crumbs": [
      "Ödevler"
    ]
  },
  {
    "objectID": "takim.html",
    "href": "takim.html",
    "title": "Takım Üyeleri",
    "section": "",
    "text": "Takım Üyelerimizin detaylı özgemişlerinin yer aldığı kişisel sayfalarına gitmek için sol menüyü veya aşağıdaki linkleri kullanabilirsiniz.\n\nPalapalapala Kungujesus GIFfrom Palapalapala GIFs\n\n\n\nTakım Üyeleri\n\nYasin_ULUÇAM\nMehmet_Murathan_YALÇIN\nErdem_ÖRGÜLÜ\nBurçin_HOLAT\nSemanur_DEMİRTAŞ\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Takım",
      "Takım Üyeleri"
    ]
  },
  {
    "objectID": "proje.html",
    "href": "proje.html",
    "title": "Çalışma 2",
    "section": "",
    "text": "Proje, yaş grupları, eğitim durumu ve evlilik durumu verilerini içermektedir.\nKapsamı, verilerin yıllık ortalamalarının hesaplanması, veri keşfi, trend analizi ve model uydurma süreçlerini içerir.\n\n\n\n\nProje kapsamında kullanılan veriler yaş grupları, eğitim durumu ve evlilik durumuyla ilgilidir.\nVeriler, yıllık ortalamalar şeklinde sunulmuştur.\n\n\n\n\n\nVeriler Excel dosyalarından alınmıştır.\n“Yas_Grubu_VS.xlsx”, “Egitim_Durum_VS.xlsx”, “Evlilik_Durumu_VS.xlsx” dosyaları kullanılmıştır.\n\n\n\n\n\nVeriler, belirli zaman aralıklarında yaş grupları, eğitim durumu ve evlilik durumu üzerindeki istatistiksel bilgileri içerir.\nÖrnek olarak, yaş grupları verileri 15-19 yaş aralığından 65+ yaş aralığına kadar olan yıllık ortalama verileri içerir.\n\n\n\n\n\nProje için bu verilerin seçilme sebebi, belirli demografik gruplar üzerindeki değişimleri ve ilişkileri anlamak amacıyla seçilmiştir.\nYaş grupları, eğitim durumu ve evlilik durumu verilerinin bir arada analiz edilmesi, geniş kapsamlı bir bakış açısı sağlar.\n\n\n\n\n\nVerilerin ön işleme adımları, gereksiz sütunların çıkarılması, sütun adlarının güncellenmesi ve yıllık ortalamaların hesaplanması gibi adımları içerir.\n\n\n\n\n\nAnaliz aşamasında, verilerin birleştirilmesi, korelasyon analizi, trend analizi ve görselleştirme işlemleri gerçekleştirilir.\n\n\n\n\n\nVeri keşfi adımları, verilerin genel yapısının anlaşılması ve veri setindeki önemli özelliklerin belirlenmesini içerir.\n\n\n\n\n\nTrend analizi, belirli bir zaman aralığındaki verilerin eğilimlerini ve değişimlerini inceleyerek gelecekteki olası trendleri tahmin etmeyi amaçlar.\n\n\n\n\n\nModel uydurma aşamasında, veriler üzerinde istatistiksel veya makine öğrenimi modelleri kullanılarak analizler ve tahminler gerçekleştirilir.\n\n\n\n\nBu kod, yaş grubu, eğitim durumu ve evlilik durumu verilerini okur, yıllık ortalamaları hesaplar ve bu veri kümeleri arasındaki korelasyonları görselleştirir. İşte kodun detaylı açıklaması:\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2, ve corrplot kütüphaneleri yüklenir.\nYaş Grubu Verisinin Yüklenmesi:\nYas_Grubu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Yaş grubu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEğitim Durumu Verisinin Yüklenmesi:\nEgitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Eğitim durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEvlilik Durumu Verisinin Yüklenmesi:\nEvlilik_Durumu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Evlilik durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nVeri Kümelerinin Birleştirilmesi:\nÜç veri kümesi Year sütunu üzerinden birleştirilir.\nKorelasyon Hesaplama ve Görselleştirme:\nYaş grubu ile evlilik durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nYaş grubu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nEvlilik durumu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nKodun tamamını çalıştırarak, yaş, eğitim ve evlilik durumu arasındaki ilişkileri görselleştirebilirsiniz. Bu görselleştirmeler, veri analizi sürecinde önemli içgörüler sağlar.\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Yaş grubu verisini yükleme\nage_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nage_data &lt;- age_data[,-2]  # İkinci sütunu kaldır\ncolnames(age_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\",\"65+\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nage_data$Year &lt;- as.integer(sub(\" .*\", \"\", age_data$Date))\nyearly_age_averages &lt;- age_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`15-19`:`65+`, mean, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(`15-19`:`65+`, mean, na.rm = TRUE)`.\nℹ In group 1: `Year = 2005`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(age_data)\n\n# Eğitim durumu verisini yükleme\neducation_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\neducation_data &lt;- education_data[,-2]  # İkinci sütunu kaldır\ncolnames(education_data) &lt;- c(\"Date\",\"Okuma-yazma bilmeyen\",\"Okuma yazma bilen fakat bir okul bitirmeyen\",  \"Ilkokul\",  \"Ortaokul veya dengi meslek okul\",  \"Genel lise\",\"Lise dengi meslek okul\"   ,\"Yuksekokul veya fakulte\", \"Acik Ogretim\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma-yazma bilmeyen`:`Acik Ogretim`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(education_data)\n\n# Evlilik durumu verisini yükleme\nmarital_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nmarital_data &lt;- marital_data[,-2]  # İkinci sütunu kaldır\ncolnames(marital_data) &lt;- c(\"Date\", \"Hic Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi Oldu\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nmarital_data$Year &lt;- as.integer(sub(\" .*\", \"\", marital_data$Date))\nyearly_marriage_averages &lt;- marital_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Hic Evlenmedi`:`Esi Oldu`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(marital_data)\n\n# Veri kümelerini 'Year' sütununda birleştir\ncombined_data &lt;- full_join(yearly_age_averages, yearly_education_averages, by = \"Year\") %&gt;%\n  full_join(yearly_marriage_averages, by = \"Year\")\n\n# Yaş ve evlilik durumu sütunlarını seç ve korelasyon hesapla\nage_marital_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Evlendi|Bosandi|Esi Oldu\", names(combined_data))], use = \"complete.obs\")\n\n# Yaş ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nage_education_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Evlilik ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nmarital_education_correlation &lt;- cor(combined_data[grepl(\"Evlendi|Bosandi|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Korelasyonları görselleştirme\nlibrary(corrplot)\n\n# Yaş ve evlilik durumu korelasyonlarını görselleştirme\ncorrplot(age_marital_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Yaş ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(age_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Evlilik ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(marital_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n\n\n\n\nBu kod, eğitim durumuna göre yıllık ortalama işsizlik oranlarını analiz etmek ve görselleştirmek için etkili bir yol sağlar.\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2 kütüphaneleri yüklenir. Veri Okuma ve Düzenleme:\nread_excel fonksiyonu kullanılarak Egitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılarak Year sütunu eklenir. Yıllık Ortalamaların Hesaplanması:\nHer eğitim kategorisi için yıllık ortalamalar hesaplanır. Verilerin Uzun Formatta Düzenlenmesi:\npivot_longer fonksiyonu kullanılarak veriler yeniden şekillendirilir. Bu adım, eğitim durumuna göre ortalama işsizlik oranlarını daha kolay görselleştirebilmek için gereklidir. Görselleştirme:\nggplot2 kullanılarak yıllık ortalama işsizlik oranları, eğitim durumu ve yıl bazında görselleştirilir. Bar grafikler kullanılarak farklı eğitim durumları arasındaki işsizlik oranları karşılaştırılır. Grafikler estetik ve okunabilir olması için çeşitli temalar ve ayarlar eklenir.\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Dosya yolunu düzenleyerek okuma işlemi\neducation_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu atlayarak verileri düzenleme\neducation_data &lt;- education_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(education_data) &lt;- c(\"Date\", \"Okuma_yazma_bilmeyen\", \"Okuma_yazma_bilen_fakat_bir_okul_bitirmeyen\", \"Ilkokul\", \"Ortaokul_veya_dengi_meslek_okul\", \"Genel_lise\", \"Lise_dengi_meslek_okul\", \"Yuksekokul_veya_fakulte\", \"Acik_Ogretim\")\n\n# Yıl bilgisini Tarih sütunundan çıkarma\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\n\n# Her eğitim kategorisi için yıllık ortalamaları hesaplama\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma_yazma_bilmeyen`:`Acik_Ogretim`, mean, na.rm = TRUE))\n\n# Verileri yeniden şekillendirme\nyearly_education_long &lt;- yearly_education_averages %&gt;%\n  pivot_longer(cols = `Okuma_yazma_bilmeyen`:`Acik_Ogretim`, names_to = \"Education_Status\", values_to = \"Average_Unemployment_Rate\")\n\n# Yıllık ortalama işsizlik oranlarını eğitim durumu ve yıl bazında görselleştirme\nggplot(yearly_education_long, aes(x = Education_Status, y = Average_Unemployment_Rate, fill = Education_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  labs(title = \"Yıllık Ortalama İşsizlik Oranları ve Eğitim Durumu\", x = \"Eğitim Durumu\", y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\nExcel dosyasından evlilik durumlarına ilişkin verileri okuyarak yıllık ortalama oranları hesaplar ve ardından bu oranları bir bar grafiğinde görselleştirir.\nGerekli kütüphaneleri yükleme: İlk olarak, R’de kullanacağınız bazı kütüphaneleri yüklüyorsunuz. Bu kütüphaneler veri işleme ve görselleştirme için kullanılır.\nExcel dosyasından veri alma: Belirtilen Excel dosyasından verileri okuyorsunuz. Bu veriler, evlilik durumlarına ilişkin olabilir.\nVeri setini düzenleme: Okunan veri setini düzenliyorsunuz. Örneğin, gereksiz sütunları çıkarıyorsunuz ve sütunlara anlamlı isimler veriyorsunuz.\nVerileri analiz için hazırlama: Analiz yapmak için verileri hazırlıyorsunuz. Örneğin, tarih verisinden yıl bilgisini çıkararak analiz için kullanıma uygun hale getiriyorsunuz.\nOrtalama hesaplama: Her yıl için evlilik durumu oranlarının ortalamasını hesaplıyorsunuz. Bu, yıllık evlilik trendlerini görmek için önemlidir.\nVeriyi uzun formata dönüştürme: Veriyi görselleştirmek için uzun formata dönüştürüyorsunuz. Bu, veriyi daha iyi bir şekilde görselleştirmenize olanak tanır.\nVeriyi görselleştirme: Son olarak, yıllık evlilik durumu oranlarını görselleştiriyorsunuz. Bu genellikle bar grafikleri kullanılarak yapılır ve trendleri daha açık bir şekilde gösterir.\n\n# Gerekli kütüphaneleri yükleme\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Excel dosyasından veri alma\nmarriage_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu çıkarma\nmarriage_data &lt;- marriage_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(marriage_data) &lt;- c(\"Date\", \"Hic_Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi_Oldu\")\n\n# Tarih sütunundan yılı çıkarma\nmarriage_data$Year &lt;- as.integer(sub(\" .*\", \"\", marriage_data$Date))\n\n# Her evlilik durumu için yıllık ortalamaları hesaplama\nyearly_marriage_averages &lt;- marriage_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(Hic_Evlenmedi:Esi_Oldu, mean, na.rm = TRUE))\n\n# Verileri grafik için uzun formata dönüştürme\nyearly_marriage_long &lt;- yearly_marriage_averages %&gt;%\n  pivot_longer(cols = Hic_Evlenmedi:Esi_Oldu, names_to = \"Marital_Status\", values_to = \"Average_Rate\")\n\n# Yıllık ortalama oranları yıl ve evlilik durumu bazında görselleştirme\nggplot(yearly_marriage_long, aes(x = as.factor(Year), y = Average_Rate, fill = Marital_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = sprintf(\"%.1f\", Average_Rate)), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +\n  labs(title = \"Evlilik Durumuna Göre Yıllık Ortalama Oranlar\", x = \"Yıl\", y = \"Ortalama Oran (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\nExcel dosyasından işsizlik verilerini okur, her yaş grubu için ortalama işsizlik oranını hesaplar ve ggplot2 kullanarak her yaş grubu için ortalama işsizlik oranlarını çizer.\n\nlibrary(readxl)\n# Load the data, assuming the file path is correct and the sheet is named appropriately\n# Ensure to replace with the actual path and type it directly here\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Calculating the average unemployment rate for each age group\nage_group_averages &lt;- unemployment_data %&gt;%\n  select(-Date) %&gt;%  # Exclude the Date for calculation\n  summarise(across(everything(), mean, na.rm = TRUE)) %&gt;%  # Calculate mean, ignoring NA values\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Age_Group\",\n    values_to = \"Average_Unemployment_Rate\"\n  )\n\n# Plotting the average unemployment rates for each age group\nggplot(age_group_averages, aes(x = Age_Group, y = Average_Unemployment_Rate, fill = Age_Group)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Yaş gruplarına göre Ortalama İşsizlik Oranı\", x = \"Yaş Grubu\", y = \"Ortalama İşsizlik Oranı\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\nExcel dosyasından işsizlik verilerini okuyup yıllara göre yaş gruplarının ortalama işsizlik oranlarını hesaplar ve bu verileri çubuk grafikle görselleştirir.\nİlk olarak, dplyr ve ggplot2 kütüphaneleri yüklenir. Ardından, belirtilen Excel dosyasından veriler okunur ve gereksiz ikinci sütun düşürülür. Sütun isimleri, yaş gruplarını doğrudan temsil ettiği varsayılarak ayarlanır. Tarih bilgisinden yıl bilgisi çıkarılır ve yeni bir “Year” (Yıl) sütunu oluşturulur. Her yıl için tüm yaş gruplarının ortalama işsizlik oranı hesaplanır. Son olarak, yıllara göre ortalama işsizlik oranları, çubuk grafik kullanılarak görselleştirilir. Görsel, her yılın ortalama işsizlik oranını gösterir ve çubukların renkleri yılları temsil eder. Bu şekilde, yıllara göre işsizlik oranlarının değişimini kolayca görebilirsiniz.\n\nlibrary(dplyr)\nlibrary(ggplot2)\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\n# Extract the year as an integer\nunemployment_data$Year &lt;- as.integer(sub(\" .*\", \"\", unemployment_data$Date))\n\n# Calculate the average unemployment rate for all age groups combined for each year\nannual_averages &lt;- unemployment_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(Average_Unemployment_Rate = mean(c_across(`15-19`:`65+`), na.rm = TRUE))\n\n# Plotting the average unemployment rates by year using a bar graph\nggplot(annual_averages, aes(x = as.factor(Year), y = Average_Unemployment_Rate, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", width = 0.7) +  # Using bars to represent the average rates\n  scale_fill_brewer(palette = \"Paired\") +  # Optional: adds color using a color palette\n  labs(title = \"Bütün Yaş gruplarının yıl bazında İşsizlik Oranı\", \n       x = \"Yıl\", \n       y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nfrom"
  },
  {
    "objectID": "proje.html#data-source",
    "href": "proje.html#data-source",
    "title": "Proje X",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\nxxxxxx"
  },
  {
    "objectID": "proje.html#general-information-about-data",
    "href": "proje.html#general-information-about-data",
    "title": "Proje X",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nxxxxxx"
  },
  {
    "objectID": "proje.html#reason-of-choice",
    "href": "proje.html#reason-of-choice",
    "title": "Proje X",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nxxxxxx"
  },
  {
    "objectID": "proje.html#preprocessing",
    "href": "proje.html#preprocessing",
    "title": "Proje X",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nxxxxxx"
  },
  {
    "objectID": "proje.html#exploratory-data-analysis",
    "href": "proje.html#exploratory-data-analysis",
    "title": "Proje X",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "proje.html#trend-analysis",
    "href": "proje.html#trend-analysis",
    "title": "Proje X",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "proje.html#model-fitting",
    "href": "proje.html#model-fitting",
    "title": "Proje X",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "proje.html#results",
    "href": "proje.html#results",
    "title": "Proje X",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "portfolyo/calisma2.html",
    "href": "portfolyo/calisma2.html",
    "title": "Çalışma 2",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "portfolyo/calisma1.html",
    "href": "portfolyo/calisma1.html",
    "title": "Çalışma 1",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field."
  },
  {
    "objectID": "proje.html#veri-kaynağı",
    "href": "proje.html#veri-kaynağı",
    "title": "Proje X (proje adını yazınız)",
    "section": "2.1 Veri Kaynağı",
    "text": "2.1 Veri Kaynağı\nxxxxxx"
  },
  {
    "objectID": "proje.html#veri-hakkında-genel-bilgiler",
    "href": "proje.html#veri-hakkında-genel-bilgiler",
    "title": "Proje X (proje adını yazınız)",
    "section": "2.2 Veri Hakkında Genel Bilgiler",
    "text": "2.2 Veri Hakkında Genel Bilgiler\nxxxxxx"
  },
  {
    "objectID": "proje.html#tercih-sebebi",
    "href": "proje.html#tercih-sebebi",
    "title": "Proje X (proje adını yazınız)",
    "section": "2.3 Tercih Sebebi",
    "text": "2.3 Tercih Sebebi\nxxxxxx"
  },
  {
    "objectID": "proje.html#ön-işleme",
    "href": "proje.html#ön-işleme",
    "title": "Proje X (proje adını yazınız)",
    "section": "2.4 Ön İşleme",
    "text": "2.4 Ön İşleme\nxxxxxx"
  },
  {
    "objectID": "proje.html#keşifsel-veri-analizi",
    "href": "proje.html#keşifsel-veri-analizi",
    "title": "Proje X (proje adını yazınız)",
    "section": "3.1 Keşifsel Veri Analizi",
    "text": "3.1 Keşifsel Veri Analizi\nxxxxxx"
  },
  {
    "objectID": "proje.html#trend-analizi",
    "href": "proje.html#trend-analizi",
    "title": "Proje X (proje adını yazınız)",
    "section": "3.2 Trend Analizi",
    "text": "3.2 Trend Analizi\nxxxxxx"
  },
  {
    "objectID": "proje.html#model-uydurma",
    "href": "proje.html#model-uydurma",
    "title": "Proje X (proje adını yazınız)",
    "section": "3.3 Model Uydurma",
    "text": "3.3 Model Uydurma\nxxxxxx"
  },
  {
    "objectID": "proje.html#sonuçlar",
    "href": "proje.html#sonuçlar",
    "title": "Proje X (proje adını yazınız)",
    "section": "3.4 Sonuçlar",
    "text": "3.4 Sonuçlar\nxxxxxx"
  },
  {
    "objectID": "portfolyo/calisma1.html#a",
    "href": "portfolyo/calisma1.html#a",
    "title": "Çalışma 1",
    "section": "(a)",
    "text": "(a)\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "portfolyo/calisma2.html#a",
    "href": "portfolyo/calisma2.html#a",
    "title": "Çalışma 2",
    "section": "(a)",
    "text": "(a)\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "portfolyo/calisma2.html#b",
    "href": "portfolyo/calisma2.html#b",
    "title": "Çalışma 2",
    "section": "(b)",
    "text": "(b)"
  },
  {
    "objectID": "portfolyo/calisma1.html#b",
    "href": "portfolyo/calisma1.html#b",
    "title": "Task 1: Explore Statistical Summaries with Special Functions and Loops",
    "section": "(b)",
    "text": "(b)"
  },
  {
    "objectID": "takim/dusantadic.html",
    "href": "takim/dusantadic.html",
    "title": "Dusan Tadic",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Takım Üyeleri",
      "Dusan Tadic"
    ]
  },
  {
    "objectID": "takim/szymanski.html#employements",
    "href": "takim/szymanski.html#employements",
    "title": "Sebastian Szymański",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy",
    "crumbs": [
      "Takım Üyeleri",
      "Sebastian Szymański"
    ]
  },
  {
    "objectID": "takim/szymanski.html#internships",
    "href": "takim/szymanski.html#internships",
    "title": "Sebastian Szymański",
    "section": "Internships",
    "text": "Internships\n\nFirm aaa, position xx, year xxx\nFirm bbb, position yyy, year yyy",
    "crumbs": [
      "Takım Üyeleri",
      "Sebastian Szymański"
    ]
  },
  {
    "objectID": "takim/szymanski.html#işler",
    "href": "takim/szymanski.html#işler",
    "title": "Sebastian Szymański",
    "section": "İşler",
    "text": "İşler\n\nFirma xxx, pozisyon xx, yıl xxx\nFirma yyy, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/szymanski.html#stajlar",
    "href": "takim/szymanski.html#stajlar",
    "title": "Sebastian Szymański",
    "section": "Stajlar",
    "text": "Stajlar\n\nFirma aaa, pozisyon xx, yıl xxx\nFirma bbb, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/edindzeko.html#işler",
    "href": "takim/edindzeko.html#işler",
    "title": "Edin_Džeko",
    "section": "İşler",
    "text": "İşler\n\nFirma xxx, pozisyon xx, yıl xxx\nFirma yyy, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/edindzeko.html#stajlar",
    "href": "takim/edindzeko.html#stajlar",
    "title": "Edin_Džeko",
    "section": "Stajlar",
    "text": "Stajlar\n\nFirma aaa, pozisyon xx, yıl xxx\nFirma bbb, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/fred.html#işler",
    "href": "takim/fred.html#işler",
    "title": "Frederico Rodrigues",
    "section": "İşler",
    "text": "İşler\n\nFirma xxx, pozisyon xx, yıl xxx\nFirma yyy, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/fred.html#stajlar",
    "href": "takim/fred.html#stajlar",
    "title": "Frederico Rodrigues",
    "section": "Stajlar",
    "text": "Stajlar\n\nFirma aaa, pozisyon xx, yıl xxx\nFirma bbb, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/dusantadic.html#işler",
    "href": "takim/dusantadic.html#işler",
    "title": "Dusan Tadic",
    "section": "İşler",
    "text": "İşler\n\nFirma xxx, pozisyon xx, yıl xxx\nFirma yyy, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/dusantadic.html#stajlar",
    "href": "takim/dusantadic.html#stajlar",
    "title": "Dusan Tadic",
    "section": "Stajlar",
    "text": "Stajlar\n\nFirma aaa, pozisyon xx, yıl xxx\nFirma bbb, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/yasinulucam.html#işler",
    "href": "takim/yasinulucam.html#işler",
    "title": "Yasin ULUÇAM",
    "section": "İşler",
    "text": "İşler\n\nSavunma Sanayii Başkanlığı, Proje Mühendisi, 14.07.2017- Halen\n\nAlçak ve çok alçak irtifa nokta hava savunma sistemi projelerinde proje sorumlusu/üyesi olarak görev yapmaktayım. Sözleşme yönetimi ve proje yönetimi faaliyetlerini yürütmekteyim.\n\nMakine ve Kimya Endüstrisi A.Ş, Kalite Güvence Mühendisi, 25.01.2015-12.07.2017,\n\nMontaj ve son kontrol kalite birimlerinden sorumlu olarak görev yaptım. Ayrıca atışlı/atışsız saha testlerinin planlanması ve icra edilmesi faaliyetlerini de yürüttüm.",
    "crumbs": [
      "Takım",
      "Yasin ULUÇAM"
    ]
  },
  {
    "objectID": "docs/project.html",
    "href": "docs/project.html",
    "title": "Project X",
    "section": "",
    "text": "Welcome to my project page.\nKeep an eye on this space to stay updated with my project activities.\n(The titles below are provided as examples; please feel free to adjust them as necessary.)"
  },
  {
    "objectID": "docs/project.html#data-source",
    "href": "docs/project.html#data-source",
    "title": "Project X",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#general-information-about-data",
    "href": "docs/project.html#general-information-about-data",
    "title": "Project X",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#reason-of-choice",
    "href": "docs/project.html#reason-of-choice",
    "title": "Project X",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#preprocessing",
    "href": "docs/project.html#preprocessing",
    "title": "Project X",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#exploratory-data-analysis",
    "href": "docs/project.html#exploratory-data-analysis",
    "title": "Project X",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#trend-analysis",
    "href": "docs/project.html#trend-analysis",
    "title": "Project X",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#model-fitting",
    "href": "docs/project.html#model-fitting",
    "title": "Project X",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "docs/project.html#results",
    "href": "docs/project.html#results",
    "title": "Project X",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "takim/mmurathanyalcin.html#işler",
    "href": "takim/mmurathanyalcin.html#işler",
    "title": "Mehmet Murathan YALÇIN",
    "section": "İşler",
    "text": "İşler\n1 Mitaş Endüstri AŞ Hammadde Girdi Kalite Kontrol Mühendisi, 2021-2024\nKalite Yönetim Sistemi standartları ve Şirket politikalarına uygun şekilde çalışmaları yönetmek; şirket süreçlerine ve prosedürlerine uygulanmasını sağlamak\nProjelerde hammadde girdi kalite departmanını ilgilendiren kısımların süreçlere uygun olarak yürütülmesini güvence altına almak\nHammadde girdi sürecine tabii parçaların planlamasını yapmak ve numune işlemeye geçiş sürecini takip etmek\nUygunsuz ürünleri değerlendirmek, ilgili aksiyonları tanımlamak ve sonuçları/iyileştirmeleri/kararları takip etmek, uygulamak\nTahribatsız Muayene yöntemlerine hakim olmak\nTasarım, imalat ve montaj faaliyetlerinde kalite güvence ve/veya kalite muayene faaliyetlerinde bilgi sahibi olmak\nİşbirliği yapılan ekiplerin puantaj ve performans takibini gerçekleştirmek, iyileştirme, eğitim ve beceri geliştirmeye destek olmak\n2 İNNOVA Bilişim Sistemleri AŞ , Satış Yöneticisi, 2020-2021\nKalite Yönetim Sistemi standartları ve Şirket politikalarına uygun şekilde çalışmaları yönetmek; şirket süreçlerine ve prosedürlerine uygulanmasını sağlamak\nProjelerde hammadde girdi kalite departmanını ilgilendiren kısımların süreçlere uygun olarak yürütülmesini güvence altına almak\nHammadde girdi sürecine tabii parçaların planlamasını yapmak ve numune işlemeye geçiş sürecini takip etmek\nUygunsuz ürünleri değerlendirmek, ilgili aksiyonları tanımlamak ve sonuçları/iyileştirmeleri/kararları takip etmek, uygulamak\nTahribatsız Muayene yöntemlerine hakim olmak\nTasarım, imalat ve montaj faaliyetlerinde kalite güvence ve/veya kalite muayene faaliyetlerinde bilgi sahibi olmak\nİşbirliği yapılan ekiplerin puantaj ve performans takibini gerçekleştirmek, iyileştirme, eğitim ve beceri geliştirmeye destek olmak",
    "crumbs": [
      "Takım",
      "Mehmet Murathan YALÇIN"
    ]
  },
  {
    "objectID": "takim/erdemorgulu.html#işler",
    "href": "takim/erdemorgulu.html#işler",
    "title": "Erdem ÖRGÜLÜ",
    "section": "İşler",
    "text": "İşler\n\nTürk Hava Yolları A.O., Uçuş Emniyet Mühendisi, İstanbul,\nEkim 2018 - Haziran 2021\nTürk Havacılık ve Uzay Sanayii A.Ş., Emniyet Yönetim Sistem Mühendisi, Ankara,\nHaziran 2021 - Devam ediyor",
    "crumbs": [
      "Takım Üyeleri",
      "Erdem ÖRGÜLÜ"
    ]
  },
  {
    "objectID": "takim/erdemorgulu.html#stajlaryaz-işleri",
    "href": "takim/erdemorgulu.html#stajlaryaz-işleri",
    "title": "Erdem ÖRGÜLÜ",
    "section": "Stajlar/Yaz İşleri",
    "text": "Stajlar/Yaz İşleri\n\nTEI- Tusaş Motor Sanayii A.Ş., Stajyer Mühendis, Temmuz 2018\nAlp Havacılık, Stajyer Mühendis, Ağustos 2018\nAtlantique Holiday Club, Fotoğrafçılık (yaz işi), Haziran 2015- Eylül 2015\nEge Ports, Welcome Desk Çalışanı (yaz işi), Haziran 2011- Eylül 2012",
    "crumbs": [
      "Takım Üyeleri",
      "Erdem ÖRGÜLÜ"
    ]
  },
  {
    "objectID": "takim/semanurdemirtas.html#stajlar",
    "href": "takim/semanurdemirtas.html#stajlar",
    "title": "Semanur DEMİRTAS",
    "section": "Stajlar",
    "text": "Stajlar\n\nSummer 2017 (1 Month) Ces Advanced Composite A.Ş, Ankara\nSummer 2016 (1 Month) Mitaş Cıvata A.Ş, Ankara",
    "crumbs": [
      "Takım Üyeleri",
      "Semanur DEMİRTAS"
    ]
  },
  {
    "objectID": "takim/semanurdemirtas.html",
    "href": "takim/semanurdemirtas.html",
    "title": "Semanur DEMİRTAS",
    "section": "",
    "text": "&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD  =======  &gt;&gt;&gt;&gt;&gt;&gt;&gt; 49b83149e13e1bdfe8301303ad60b364c4f067f5"
  },
  {
    "objectID": "takim/erdemorgulu.html#d0eler",
    "href": "takim/erdemorgulu.html#d0eler",
    "title": "Erdem ÖRGÜLÜ",
    "section": "D0E\u001fler",
    "text": "D0E\u001fler\n\nTC&lt;rk Hava YollarD1 A.O., UC’uE\u001f Emniyet MC&lt;hendisi, D0stanbul,\nEkim 2018-Haziran 2021\nTC&lt;rk HavacD1lD1k ve Uzay Sanayii A.E\u001e., Emniyet YC6netim Sistem MC&lt;hendisi, Ankara,\nHaziran 2021- Devam ediyor"
  },
  {
    "objectID": "takim/erdemorgulu.html#stajlaryaz-d0eleri",
    "href": "takim/erdemorgulu.html#stajlaryaz-d0eleri",
    "title": "Erdem ÖRGÜLÜ",
    "section": "Stajlar/Yaz D0E\u001fleri",
    "text": "Stajlar/Yaz D0E\u001fleri\n\nTEI- TusaE\u001f Motor Sanayii A.E\u001e., Stajyer MC&lt;hendis, Temmuz 2018\nAlp HavacD1lD1k., Stajyer MC&lt;hendis, AD\u001fustos 2018\nAtlantique Holiday Club, FotoD\u001frafC’D1lD1k (yaz iE\u001fi), Haziran 2015- EylC&lt;l 2015\nEge Ports, Welcome Desk C\u0007alD1E\u001fanD1 (yaz iE\u001fi), Haziran 2011- EylC&lt;l 2012"
  },
  {
    "objectID": "takim/burcinholat.html#işler",
    "href": "takim/burcinholat.html#işler",
    "title": "Burçin HOLAT",
    "section": "İşler",
    "text": "İşler\n\nGürgenler A.Ş., Kalite Kontrol Mühendisliği, 1 yıl\nMitaş Cıvata, Laboratuvar Mühendisi, 4,5 yıl"
  },
  {
    "objectID": "takim/burcinholat.html#stajlar",
    "href": "takim/burcinholat.html#stajlar",
    "title": "Burçin HOLAT",
    "section": "Stajlar",
    "text": "Stajlar\n\nMakina ve Kimya Endüstrisi Kurumu 30.06.2014 – 06.08.2014\nAktaş Döküm 29.06.2015- 29.07.2015"
  },
  {
    "objectID": "portfolyo/calisma1.html#a-explore-statistical-summaries-with-special-functions-and-loops",
    "href": "portfolyo/calisma1.html#a-explore-statistical-summaries-with-special-functions-and-loops",
    "title": "Task 1:",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field."
  },
  {
    "objectID": "portfolyo/calisma1.html#b-explore-statistical-summaries-with-special-functions-and-loops",
    "href": "portfolyo/calisma1.html#b-explore-statistical-summaries-with-special-functions-and-loops",
    "title": "Çalışma 1",
    "section": "(B) Explore Statistical Summaries with Special Functions and Loops",
    "text": "(B) Explore Statistical Summaries with Special Functions and Loops\n\n# Define the custom_summary function\ncustom_summary &lt;- function(data_vector) {\n  # Calculate average\n  avg &lt;- mean(data_vector)\n  # Calculate median\n  med &lt;- median(data_vector)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector)\n  # Find minimum value\n  min_val &lt;- min(data_vector)\n  # Find maximum value\n  max_val &lt;- max(data_vector)\n  \n  # Store the calculated values in an array\n  summary_array &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array)\n}\n\n# Load the mtcars dataset\ndata(mtcars)\n\n# Display the first few rows of the mtcars dataset\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Iterate over each column of the mtcars dataset\nfor (col in colnames(mtcars)) {\n  # Apply custom_summary function to each column\n  summary_results[[col]] &lt;- custom_summary(mtcars[[col]])\n}\n\n# Print summary results for each column\nfor (i in seq_along(summary_results)) {\n  col_name &lt;- names(summary_results)[i]\n  cat(\"Summary statistics for column\", col_name, \":\\n\")\n  print(summary_results[[i]])\n  cat(\"\\n\")\n  }\n\nSummary statistics for column mpg :\n[1] 20.090625 19.200000  6.026948 10.400000 33.900000\n\nSummary statistics for column cyl :\n[1] 6.187500 6.000000 1.785922 4.000000 8.000000\n\nSummary statistics for column disp :\n[1] 230.7219 196.3000 123.9387  71.1000 472.0000\n\nSummary statistics for column hp :\n[1] 146.68750 123.00000  68.56287  52.00000 335.00000\n\nSummary statistics for column drat :\n[1] 3.5965625 3.6950000 0.5346787 2.7600000 4.9300000\n\nSummary statistics for column wt :\n[1] 3.2172500 3.3250000 0.9784574 1.5130000 5.4240000\n\nSummary statistics for column qsec :\n[1] 17.848750 17.710000  1.786943 14.500000 22.900000\n\nSummary statistics for column vs :\n[1] 0.4375000 0.0000000 0.5040161 0.0000000 1.0000000\n\nSummary statistics for column am :\n[1] 0.4062500 0.0000000 0.4989909 0.0000000 1.0000000\n\nSummary statistics for column gear :\n[1] 3.6875000 4.0000000 0.7378041 3.0000000 5.0000000\n\nSummary statistics for column carb :\n[1] 2.8125 2.0000 1.6152 1.0000 8.0000"
  },
  {
    "objectID": "portfolyo/calisma1.html#c",
    "href": "portfolyo/calisma1.html#c",
    "title": "Task 1:",
    "section": "(c)",
    "text": "(c)"
  },
  {
    "objectID": "portfolyo/calisma1.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "href": "portfolyo/calisma1.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "title": "Çalışma 1",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field."
  },
  {
    "objectID": "portfolyo/calisma1.html#c-c-madddesi",
    "href": "portfolyo/calisma1.html#c-c-madddesi",
    "title": "Task 1:",
    "section": "(c) C Madddesi",
    "text": "(c) C Madddesi\n\n# Define a function named \"custom_summary2\"\ncustom_summary2 &lt;- function(data_vector2) {\n  # Calculate average\n  avg &lt;- mean(data_vector2)\n  # Calculate median\n  med &lt;- median(data_vector2)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector2)\n  # Find minimum value\n  min_val &lt;- min(data_vector2)\n  # Find maximum value\n  max_val &lt;- max(data_vector2)\n  \n  # Store the calculated values in an array\n  summary_array2 &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array2)\n}\n\n# Example usage of the custom_summary function\n\nlibrary(dslabs)\n# Load the na_example dataset\ndata(na_example)\n\n# Display the contents of the dataset including NA values\nhead(na_example)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the total number of NA values in the dataset\ntotal_na &lt;- sum(is.na(na_example))\nprint(paste(\"Total NA values:\", total_na))\n\n[1] \"Total NA values: 145\"\n\n# Replace all NA values with course number 665\nna_example_filled &lt;- na_example\nna_example_filled[is.na(na_example_filled)] &lt;- 665\n\n# Display the updated dataset (no NA values)\nhead(na_example_filled)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the new total number of NA values (should be zero)\nnew_total_na &lt;- sum(is.na(na_example_filled))\nprint(paste(\"New total NA values:\", new_total_na))\n\n[1] \"New total NA values: 0\"\n\n# Count the number of times the number 665 appears in the updated dataset\ncount_665 &lt;- sum(na_example_filled == 665)\nprint(paste(\"Number of times 665 appears:\", count_665))\n\n[1] \"Number of times 665 appears: 145\"\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Calculate summary statistics for na_example_filled directly\nsummary_results &lt;- custom_summary(na_example_filled)\n\n# Print summary results\ncat(\"Summary statistics for na_example_filled:\\n\")\n\nSummary statistics for na_example_filled:\n\nprint(summary_results)\n\n[1]  98.3930   2.0000 233.4561   1.0000 665.0000"
  },
  {
    "objectID": "portfolyo/calisma1.html#c-processing-a-data-set-with-na-values-using-the-dslabs-package",
    "href": "portfolyo/calisma1.html#c-processing-a-data-set-with-na-values-using-the-dslabs-package",
    "title": "Çalışma 1",
    "section": "(C) “Processing a Data Set with NA Values Using the DSLabs Package”",
    "text": "(C) “Processing a Data Set with NA Values Using the DSLabs Package”\n\n# Define a function named \"custom_summary2\"\ncustom_summary2 &lt;- function(data_vector2) {\n  # Calculate average\n  avg &lt;- mean(data_vector2)\n  # Calculate median\n  med &lt;- median(data_vector2)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector2)\n  # Find minimum value\n  min_val &lt;- min(data_vector2)\n  # Find maximum value\n  max_val &lt;- max(data_vector2)\n  \n  # Store the calculated values in an array\n  summary_array2 &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array2)\n}\n\n# Example usage of the custom_summary function\n\nlibrary(dslabs)\n# Load the na_example dataset\ndata(na_example)\n\n# Display the contents of the dataset including NA values\nhead(na_example)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the total number of NA values in the dataset\ntotal_na &lt;- sum(is.na(na_example))\nprint(paste(\"Total NA values:\", total_na))\n\n[1] \"Total NA values: 145\"\n\n# Replace all NA values with course number 665\nna_example_filled &lt;- na_example\nna_example_filled[is.na(na_example_filled)] &lt;- 665\n\n# Display the updated dataset (no NA values)\nhead(na_example_filled)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the new total number of NA values (should be zero)\nnew_total_na &lt;- sum(is.na(na_example_filled))\nprint(paste(\"New total NA values:\", new_total_na))\n\n[1] \"New total NA values: 0\"\n\n# Count the number of times the number 665 appears in the updated dataset\ncount_665 &lt;- sum(na_example_filled == 665)\nprint(paste(\"Number of times 665 appears:\", count_665))\n\n[1] \"Number of times 665 appears: 145\"\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Calculate summary statistics for na_example_filled directly\nsummary_results &lt;- custom_summary(na_example_filled)\n\n# Print summary results\ncat(\"Summary statistics for na_example_filled:\\n\")\n\nSummary statistics for na_example_filled:\n\nprint(summary_results)\n\n[1]  98.3930   2.0000 233.4561   1.0000 665.0000"
  },
  {
    "objectID": "portfolyo/calisma1.html#d-chat-gpt-screenshots",
    "href": "portfolyo/calisma1.html#d-chat-gpt-screenshots",
    "title": "Çalışma 1",
    "section": "(D) Chat GPT Screenshots",
    "text": "(D) Chat GPT Screenshots"
  },
  {
    "objectID": "portfolyo/Çalışma 1/calisma1.html",
    "href": "portfolyo/Çalışma 1/calisma1.html",
    "title": "Çalışma 1",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field."
  },
  {
    "objectID": "portfolyo/Çalışma 1/calisma1.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "href": "portfolyo/Çalışma 1/calisma1.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "title": "Çalışma 1",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field."
  },
  {
    "objectID": "portfolyo/Çalışma 1/calisma1.html#b-explore-statistical-summaries-with-special-functions-and-loops",
    "href": "portfolyo/Çalışma 1/calisma1.html#b-explore-statistical-summaries-with-special-functions-and-loops",
    "title": "Çalışma 1",
    "section": "(B) Explore Statistical Summaries with Special Functions and Loops",
    "text": "(B) Explore Statistical Summaries with Special Functions and Loops\n\n# Define the custom_summary function\ncustom_summary &lt;- function(data_vector) {\n  # Calculate average\n  avg &lt;- mean(data_vector)\n  # Calculate median\n  med &lt;- median(data_vector)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector)\n  # Find minimum value\n  min_val &lt;- min(data_vector)\n  # Find maximum value\n  max_val &lt;- max(data_vector)\n  \n  # Store the calculated values in an array\n  summary_array &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array)\n}\n\n# Load the mtcars dataset\ndata(mtcars)\n\n# Display the first few rows of the mtcars dataset\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Iterate over each column of the mtcars dataset\nfor (col in colnames(mtcars)) {\n  # Apply custom_summary function to each column\n  summary_results[[col]] &lt;- custom_summary(mtcars[[col]])\n}\n\n# Print summary results for each column\nfor (i in seq_along(summary_results)) {\n  col_name &lt;- names(summary_results)[i]\n  cat(\"Summary statistics for column\", col_name, \":\\n\")\n  print(summary_results[[i]])\n  cat(\"\\n\")\n  }\n\nSummary statistics for column mpg :\n[1] 20.090625 19.200000  6.026948 10.400000 33.900000\n\nSummary statistics for column cyl :\n[1] 6.187500 6.000000 1.785922 4.000000 8.000000\n\nSummary statistics for column disp :\n[1] 230.7219 196.3000 123.9387  71.1000 472.0000\n\nSummary statistics for column hp :\n[1] 146.68750 123.00000  68.56287  52.00000 335.00000\n\nSummary statistics for column drat :\n[1] 3.5965625 3.6950000 0.5346787 2.7600000 4.9300000\n\nSummary statistics for column wt :\n[1] 3.2172500 3.3250000 0.9784574 1.5130000 5.4240000\n\nSummary statistics for column qsec :\n[1] 17.848750 17.710000  1.786943 14.500000 22.900000\n\nSummary statistics for column vs :\n[1] 0.4375000 0.0000000 0.5040161 0.0000000 1.0000000\n\nSummary statistics for column am :\n[1] 0.4062500 0.0000000 0.4989909 0.0000000 1.0000000\n\nSummary statistics for column gear :\n[1] 3.6875000 4.0000000 0.7378041 3.0000000 5.0000000\n\nSummary statistics for column carb :\n[1] 2.8125 2.0000 1.6152 1.0000 8.0000"
  },
  {
    "objectID": "portfolyo/Çalışma 1/calisma1.html#c-processing-a-data-set-with-na-values-using-the-dslabs-package",
    "href": "portfolyo/Çalışma 1/calisma1.html#c-processing-a-data-set-with-na-values-using-the-dslabs-package",
    "title": "Çalışma 1",
    "section": "(C) “Processing a Data Set with NA Values Using the DSLabs Package”",
    "text": "(C) “Processing a Data Set with NA Values Using the DSLabs Package”\n\n# Define a function named \"custom_summary2\"\ncustom_summary2 &lt;- function(data_vector2) {\n  # Calculate average\n  avg &lt;- mean(data_vector2)\n  # Calculate median\n  med &lt;- median(data_vector2)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector2)\n  # Find minimum value\n  min_val &lt;- min(data_vector2)\n  # Find maximum value\n  max_val &lt;- max(data_vector2)\n  \n  # Store the calculated values in an array\n  summary_array2 &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array2)\n}\n\n# Example usage of the custom_summary function\n\nlibrary(dslabs)\n# Load the na_example dataset\ndata(na_example)\n\n# Display the contents of the dataset including NA values\nhead(na_example)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the total number of NA values in the dataset\ntotal_na &lt;- sum(is.na(na_example))\nprint(paste(\"Total NA values:\", total_na))\n\n[1] \"Total NA values: 145\"\n\n# Replace all NA values with course number 665\nna_example_filled &lt;- na_example\nna_example_filled[is.na(na_example_filled)] &lt;- 665\n\n# Display the updated dataset (no NA values)\nhead(na_example_filled)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the new total number of NA values (should be zero)\nnew_total_na &lt;- sum(is.na(na_example_filled))\nprint(paste(\"New total NA values:\", new_total_na))\n\n[1] \"New total NA values: 0\"\n\n# Count the number of times the number 665 appears in the updated dataset\ncount_665 &lt;- sum(na_example_filled == 665)\nprint(paste(\"Number of times 665 appears:\", count_665))\n\n[1] \"Number of times 665 appears: 145\"\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Calculate summary statistics for na_example_filled directly\nsummary_results &lt;- custom_summary(na_example_filled)\n\n# Print summary results\ncat(\"Summary statistics for na_example_filled:\\n\")\n\nSummary statistics for na_example_filled:\n\nprint(summary_results)\n\n[1]  98.3930   2.0000 233.4561   1.0000 665.0000"
  },
  {
    "objectID": "portfolyo/Çalışma 1/calisma1.html#d-chat-gpt-screenshots",
    "href": "portfolyo/Çalışma 1/calisma1.html#d-chat-gpt-screenshots",
    "title": "Çalışma 1",
    "section": "(D) Chat GPT Screenshots",
    "text": "(D) Chat GPT Screenshots"
  },
  {
    "objectID": "portfolyo/Çalışma 2/calisma2.html",
    "href": "portfolyo/Çalışma 2/calisma2.html",
    "title": "??al????ma 2",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "portfolyo/Calisma1/calisma1.html",
    "href": "portfolyo/Calisma1/calisma1.html",
    "title": "Çalışma 1",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field.",
    "crumbs": [
      "Ödevler",
      "Çalışma 1"
    ]
  },
  {
    "objectID": "portfolyo/Calisma1/calisma1.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "href": "portfolyo/Calisma1/calisma1.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "title": "Çalışma 1",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the importance of forecasting and using optimization models to determine the optimal supply chain solution. Another topic they covered was the preference of certain types of wood, specifically yamul and yaş kereste, in the construction industry due to their unique properties. They emphasized the importance of understanding the underlying causes of these properties to effectively utilize the wood in construction projects. The conversation also included the importance of pre-processing data, particularly in the context of image analysis, and the use of machine learning techniques like decision trees, regression methods, and boosting algorithms in industry. They discussed the importance of understanding the problem at hand and selecting appropriate machine learning techniques to create effective industry solutions. Additionally, they touched upon the importance of making accurate predictions in the market to maintain balance and the use of siralama (sorting) algorithms in online retail. Overall, they emphasized the importance of both traditional and deep learning methods in data science and the significance of understanding the underlying problem and selecting appropriate techniques to create effective industry solutions.\nMustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in the YouTube video “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler.” In one part of the conversation, they explore methods for minimizing errors in regression analysis and improving optimization methods used in machine learning. They mention the importance of gaining expertise in data science through practical applications, experience, and formal education. In another part of the conversation, they share their experiences in the energy sector and participating in prediction competitions. They emphasize the importance of continuous learning, collaboration, and sharing knowledge on the web. The speakers also discuss the concepts of descriptive, predictive, and prescriptive analytics, expressing their excitement about the potential of prescriptive analytics. Throughout the conversation, they emphasize the importance of starting early, being persistent, and staying up-to-date with the latest research and technologies in their field.",
    "crumbs": [
      "Ödevler",
      "Çalışma 1"
    ]
  },
  {
    "objectID": "portfolyo/Calisma1/calisma1.html#b-explore-statistical-summaries-with-special-functions-and-loops",
    "href": "portfolyo/Calisma1/calisma1.html#b-explore-statistical-summaries-with-special-functions-and-loops",
    "title": "Çalışma 1",
    "section": "(B) Explore Statistical Summaries with Special Functions and Loops",
    "text": "(B) Explore Statistical Summaries with Special Functions and Loops\n\n# Define the custom_summary function\ncustom_summary &lt;- function(data_vector) {\n  # Calculate average\n  avg &lt;- mean(data_vector)\n  # Calculate median\n  med &lt;- median(data_vector)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector)\n  # Find minimum value\n  min_val &lt;- min(data_vector)\n  # Find maximum value\n  max_val &lt;- max(data_vector)\n  \n  # Store the calculated values in an array\n  summary_array &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array)\n}\n\n# Load the mtcars dataset\ndata(mtcars)\n\n# Display the first few rows of the mtcars dataset\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Iterate over each column of the mtcars dataset\nfor (col in colnames(mtcars)) {\n  # Apply custom_summary function to each column\n  summary_results[[col]] &lt;- custom_summary(mtcars[[col]])\n}\n\n# Print summary results for each column\nfor (i in seq_along(summary_results)) {\n  col_name &lt;- names(summary_results)[i]\n  cat(\"Summary statistics for column\", col_name, \":\\n\")\n  print(summary_results[[i]])\n  cat(\"\\n\")\n  }\n\nSummary statistics for column mpg :\n[1] 20.090625 19.200000  6.026948 10.400000 33.900000\n\nSummary statistics for column cyl :\n[1] 6.187500 6.000000 1.785922 4.000000 8.000000\n\nSummary statistics for column disp :\n[1] 230.7219 196.3000 123.9387  71.1000 472.0000\n\nSummary statistics for column hp :\n[1] 146.68750 123.00000  68.56287  52.00000 335.00000\n\nSummary statistics for column drat :\n[1] 3.5965625 3.6950000 0.5346787 2.7600000 4.9300000\n\nSummary statistics for column wt :\n[1] 3.2172500 3.3250000 0.9784574 1.5130000 5.4240000\n\nSummary statistics for column qsec :\n[1] 17.848750 17.710000  1.786943 14.500000 22.900000\n\nSummary statistics for column vs :\n[1] 0.4375000 0.0000000 0.5040161 0.0000000 1.0000000\n\nSummary statistics for column am :\n[1] 0.4062500 0.0000000 0.4989909 0.0000000 1.0000000\n\nSummary statistics for column gear :\n[1] 3.6875000 4.0000000 0.7378041 3.0000000 5.0000000\n\nSummary statistics for column carb :\n[1] 2.8125 2.0000 1.6152 1.0000 8.0000",
    "crumbs": [
      "Ödevler",
      "Çalışma 1"
    ]
  },
  {
    "objectID": "portfolyo/Calisma1/calisma1.html#c-processing-a-data-set-with-na-values-using-the-dslabs-package",
    "href": "portfolyo/Calisma1/calisma1.html#c-processing-a-data-set-with-na-values-using-the-dslabs-package",
    "title": "Çalışma 1",
    "section": "(C) “Processing a Data Set with NA Values Using the DSLabs Package”",
    "text": "(C) “Processing a Data Set with NA Values Using the DSLabs Package”\n\n# Define a function named \"custom_summary2\"\ncustom_summary2 &lt;- function(data_vector2) {\n  # Calculate average\n  avg &lt;- mean(data_vector2)\n  # Calculate median\n  med &lt;- median(data_vector2)\n  # Calculate standard deviation\n  std_dev &lt;- sd(data_vector2)\n  # Find minimum value\n  min_val &lt;- min(data_vector2)\n  # Find maximum value\n  max_val &lt;- max(data_vector2)\n  \n  # Store the calculated values in an array\n  summary_array2 &lt;- c(avg, med, std_dev, min_val, max_val)\n  \n  # Return the array containing summary statistics\n  return(summary_array2)\n}\n\n# Example usage of the custom_summary function\n\nlibrary(dslabs)\n# Load the na_example dataset\ndata(na_example)\n\n# Display the contents of the dataset including NA values\nhead(na_example)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the total number of NA values in the dataset\ntotal_na &lt;- sum(is.na(na_example))\nprint(paste(\"Total NA values:\", total_na))\n\n[1] \"Total NA values: 145\"\n\n# Replace all NA values with course number 665\nna_example_filled &lt;- na_example\nna_example_filled[is.na(na_example_filled)] &lt;- 665\n\n# Display the updated dataset (no NA values)\nhead(na_example_filled)\n\n[1] 2 1 3 2 1 3\n\n# Calculate the new total number of NA values (should be zero)\nnew_total_na &lt;- sum(is.na(na_example_filled))\nprint(paste(\"New total NA values:\", new_total_na))\n\n[1] \"New total NA values: 0\"\n\n# Count the number of times the number 665 appears in the updated dataset\ncount_665 &lt;- sum(na_example_filled == 665)\nprint(paste(\"Number of times 665 appears:\", count_665))\n\n[1] \"Number of times 665 appears: 145\"\n\n# Create an empty list to store summary results for each column\nsummary_results &lt;- list()\n\n# Calculate summary statistics for na_example_filled directly\nsummary_results &lt;- custom_summary(na_example_filled)\n\n# Print summary results\ncat(\"Summary statistics for na_example_filled:\\n\")\n\nSummary statistics for na_example_filled:\n\nprint(summary_results)\n\n[1]  98.3930   2.0000 233.4561   1.0000 665.0000",
    "crumbs": [
      "Ödevler",
      "Çalışma 1"
    ]
  },
  {
    "objectID": "portfolyo/Calisma1/calisma1.html#d-chat-gpt-screenshots",
    "href": "portfolyo/Calisma1/calisma1.html#d-chat-gpt-screenshots",
    "title": "Çalışma 1",
    "section": "(D) Chat GPT Screenshots",
    "text": "(D) Chat GPT Screenshots",
    "crumbs": [
      "Ödevler",
      "Çalışma 1"
    ]
  },
  {
    "objectID": "takim/mmurathanyalcin.html",
    "href": "takim/mmurathanyalcin.html",
    "title": "Mehmet Murathan YALÇIN",
    "section": "",
    "text": "library(dslabs)",
    "crumbs": [
      "Takım Üyeleri",
      "Mehmet Murathan YALÇIN"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html",
    "href": "portfolyo/Calisma2/calisma2.html",
    "title": "Proje",
    "section": "",
    "text": "Proje, yaş grupları, eğitim durumu ve evlilik durumu verilerini içermektedir.\nKapsamı, verilerin yıllık ortalamalarının hesaplanması, veri keşfi, trend analizi ve model uygulama süreçlerini içerir.",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "href": "portfolyo/Calisma2/calisma2.html#a-summary-of-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---mustafa-baydoğan-erdi-daşdemir",
    "title": "??al????ma 2",
    "section": "",
    "text": "Mustafa Baydoğan and Erdi Daşdemir discuss various topics related to data science and industrial engineering in their YouTube conversation. They share their backgrounds and experiences in the field, including research in data analysis, machine learning, and optimization. One of their projects involved addressing excess inventory in a company by using data and complex modeling to optimize inventory levels. They also touched upon the im\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Load age group data\nage_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nage_data &lt;- age_data[,-2]\ncolnames(age_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\",\"65+\")\n\n# Extract the year and prepare yearly averages\nage_data$Year &lt;- as.integer(sub(\" .*\", \"\", age_data$Date))\nyearly_age_averages &lt;- age_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`15-19`:`65+`, mean, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(`15-19`:`65+`, mean, na.rm = TRUE)`.\nℹ In group 1: `Year = 2005`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n# Clean up workspace\nrm(age_data)\n# Load education status data\neducation_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\neducation_data &lt;- education_data[,-2]\ncolnames(education_data) &lt;- c(\"Date\",\"Okuma-yazma bilmeyen\",\"Okuma yazma bilen fakat bir okul bitirmeyen\",  \"Ilkokul\",  \"Ortaokul veya dengi meslek okul\",  \"Genel lise\",\"Lise dengi meslek okul\"   ,\"Yuksekokul veya fakulte\", \"Acik Ogretim\")\n\n# Extract the year and prepare yearly averages\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma-yazma bilmeyen`:`Acik Ogretim`, mean, na.rm = TRUE))\n\n# Clean up workspace\nrm(education_data)\n# Load marital status data\nmarital_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nmarital_data &lt;- marital_data[,-2]\ncolnames(marital_data) &lt;- c(\"Date\", \"Hic Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi Oldu\")\n\n# Extract the year and prepare yearly averages\nmarital_data$Year &lt;- as.integer(sub(\" .*\", \"\", marital_data$Date))\nyearly_marriage_averages &lt;- marital_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Hic Evlenmedi`:`Esi Oldu`, mean, na.rm = TRUE))\n\n# Clean up workspace\nrm(marital_data)\n\n# Merge the datasets on 'Year'\ncombined_data &lt;- full_join(yearly_age_averages, yearly_education_averages, by = \"Year\") %&gt;%\n  full_join(yearly_marriage_averages, by = \"Year\")\n\n# Select only age and marital status columns for correlation\nage_marital_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Evlendi|Bosandi|Esi Oldu\", names(combined_data))], use = \"complete.obs\")\n\n# Select only age and education status columns for correlation\nage_education_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Select only marital and education status columns for correlation\nmarital_education_correlation &lt;- cor(combined_data[grepl(\"Evlendi|Bosandi|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\nlibrary(corrplot)\n\n# Visualizing Age and Marital Status Correlation\ncorrplot(age_marital_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Visualizing Age and Education Status Correlation\ncorrplot(age_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Visualizing Marital and Education Status Correlation\ncorrplot(marital_education_correlation, method = \"circle\")"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#correletaion_code",
    "href": "portfolyo/Calisma2/calisma2.html#correletaion_code",
    "title": "Çalışma 2",
    "section": "",
    "text": "Kısa bir Açıklama Girelim\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Load age group data\nage_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nage_data &lt;- age_data[,-2]\ncolnames(age_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\",\"65+\")\n\n# Extract the year and prepare yearly averages\nage_data$Year &lt;- as.integer(sub(\" .*\", \"\", age_data$Date))\nyearly_age_averages &lt;- age_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`15-19`:`65+`, mean, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(`15-19`:`65+`, mean, na.rm = TRUE)`.\nℹ In group 1: `Year = 2005`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n# Clean up workspace\nrm(age_data)\n# Load education status data\neducation_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\neducation_data &lt;- education_data[,-2]\ncolnames(education_data) &lt;- c(\"Date\",\"Okuma-yazma bilmeyen\",\"Okuma yazma bilen fakat bir okul bitirmeyen\",  \"Ilkokul\",  \"Ortaokul veya dengi meslek okul\",  \"Genel lise\",\"Lise dengi meslek okul\"   ,\"Yuksekokul veya fakulte\", \"Acik Ogretim\")\n\n# Extract the year and prepare yearly averages\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma-yazma bilmeyen`:`Acik Ogretim`, mean, na.rm = TRUE))\n\n# Clean up workspace\nrm(education_data)\n# Load marital status data\nmarital_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nmarital_data &lt;- marital_data[,-2]\ncolnames(marital_data) &lt;- c(\"Date\", \"Hic Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi Oldu\")\n\n# Extract the year and prepare yearly averages\nmarital_data$Year &lt;- as.integer(sub(\" .*\", \"\", marital_data$Date))\nyearly_marriage_averages &lt;- marital_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Hic Evlenmedi`:`Esi Oldu`, mean, na.rm = TRUE))\n\n# Clean up workspace\nrm(marital_data)\n\n# Merge the datasets on 'Year'\ncombined_data &lt;- full_join(yearly_age_averages, yearly_education_averages, by = \"Year\") %&gt;%\n  full_join(yearly_marriage_averages, by = \"Year\")\n\n# Select only age and marital status columns for correlation\nage_marital_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Evlendi|Bosandi|Esi Oldu\", names(combined_data))], use = \"complete.obs\")\n\n# Select only age and education status columns for correlation\nage_education_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Select only marital and education status columns for correlation\nmarital_education_correlation &lt;- cor(combined_data[grepl(\"Evlendi|Bosandi|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\nlibrary(corrplot)\n\n# Visualizing Age and Marital Status Correlation\ncorrplot(age_marital_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Visualizing Age and Education Status Correlation\ncorrplot(age_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Visualizing Marital and Education Status Correlation\ncorrplot(marital_education_correlation, method = \"circle\")"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#egitim_durumuna_göre_kod",
    "href": "portfolyo/Calisma2/calisma2.html#egitim_durumuna_göre_kod",
    "title": "Çalışma 2",
    "section": "Egitim_Durumuna_Göre_Kod",
    "text": "Egitim_Durumuna_Göre_Kod\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Dosya yolunu düzenleyerek okuma işlemi\neducation_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu atlayarak verileri düzenleme\neducation_data &lt;- education_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(education_data) &lt;- c(\"Date\", \"Okuma_yazma_bilmeyen\", \"Okuma_yazma_bilen_fakat_bir_okul_bitirmeyen\", \"Ilkokul\", \"Ortaokul_veya_dengi_meslek_okul\", \"Genel_lise\", \"Lise_dengi_meslek_okul\", \"Yuksekokul_veya_fakulte\", \"Acik_Ogretim\")\n\n# Yıl bilgisini Tarih sütunundan çıkarma\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\n\n# Her eğitim kategorisi için yıllık ortalamaları hesaplama\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma_yazma_bilmeyen`:`Acik_Ogretim`, mean, na.rm = TRUE))\n\n# Verileri yeniden şekillendirme\nyearly_education_long &lt;- yearly_education_averages %&gt;%\n  pivot_longer(cols = `Okuma_yazma_bilmeyen`:`Acik_Ogretim`, names_to = \"Education_Status\", values_to = \"Average_Unemployment_Rate\")\n\n# Yıllık ortalama işsizlik oranlarını eğitim durumu ve yıl bazında görselleştirme\nggplot(yearly_education_long, aes(x = Education_Status, y = Average_Unemployment_Rate, fill = Education_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  labs(title = \"Yıllık Ortalama İşsizlik Oranları ve Eğitim Durumu\", x = \"Eğitim Durumu\", y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#evlilik_durumuna_göre_kod",
    "href": "portfolyo/Calisma2/calisma2.html#evlilik_durumuna_göre_kod",
    "title": "Çalışma 2",
    "section": "Evlilik_Durumuna_Göre_Kod",
    "text": "Evlilik_Durumuna_Göre_Kod"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yaş_grubuna_göre_kod",
    "href": "portfolyo/Calisma2/calisma2.html#yaş_grubuna_göre_kod",
    "title": "Çalışma 2",
    "section": "Yaş_Grubuna_Göre_Kod",
    "text": "Yaş_Grubuna_Göre_Kod"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yıl_bazında_ama_eğitim_kod",
    "href": "portfolyo/Calisma2/calisma2.html#yıl_bazında_ama_eğitim_kod",
    "title": "Çalışma 2",
    "section": "Yıl_Bazında_Ama_Eğitim_Kod",
    "text": "Yıl_Bazında_Ama_Eğitim_Kod"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yıl_bazında_kod",
    "href": "portfolyo/Calisma2/calisma2.html#yıl_bazında_kod",
    "title": "Çalışma 2",
    "section": "Yıl_Bazında_Kod",
    "text": "Yıl_Bazında_Kod\nTüm Telif Hakkı Saklıdır."
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#correletaion-kod-tasarımı",
    "href": "portfolyo/Calisma2/calisma2.html#correletaion-kod-tasarımı",
    "title": "Proje",
    "section": "10.1 Correletaion Kod Tasarımı",
    "text": "10.1 Correletaion Kod Tasarımı\nBu kod, yaş grubu, eğitim durumu ve evlilik durumu verilerini okur, yıllık ortalamaları hesaplar ve bu veri kümeleri arasındaki korelasyonları görselleştirir. İşte kodun detaylı açıklaması:\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2, ve corrplot kütüphaneleri yüklenir.\nYaş Grubu Verisinin Yüklenmesi:\nYas_Grubu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Yaş grubu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEğitim Durumu Verisinin Yüklenmesi:\nEgitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Eğitim durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEvlilik Durumu Verisinin Yüklenmesi:\nEvlilik_Durumu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Evlilik durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nVeri Kümelerinin Birleştirilmesi:\nÜç veri kümesi Year sütunu üzerinden birleştirilir.\nKorelasyon Hesaplama ve Görselleştirme:\nYaş grubu ile evlilik durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nYaş grubu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nEvlilik durumu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nKodun tamamını çalıştırarak, yaş, eğitim ve evlilik durumu arasındaki ilişkileri görselleştirebilirsiniz. Bu görselleştirmeler, veri analizi sürecinde önemli içgörüler sağlar.\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Yaş grubu verisini yükleme\nage_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nage_data &lt;- age_data[,-2]  # İkinci sütunu kaldır\ncolnames(age_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\",\"65+\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nage_data$Year &lt;- as.integer(sub(\" .*\", \"\", age_data$Date))\nyearly_age_averages &lt;- age_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`15-19`:`65+`, mean, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(`15-19`:`65+`, mean, na.rm = TRUE)`.\nℹ In group 1: `Year = 2005`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(age_data)\n\n# Eğitim durumu verisini yükleme\neducation_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\neducation_data &lt;- education_data[,-2]  # İkinci sütunu kaldır\ncolnames(education_data) &lt;- c(\"Date\",\"Okuma-yazma bilmeyen\",\"Okuma yazma bilen fakat bir okul bitirmeyen\",  \"Ilkokul\",  \"Ortaokul veya dengi meslek okul\",  \"Genel lise\",\"Lise dengi meslek okul\"   ,\"Yuksekokul veya fakulte\", \"Acik Ogretim\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma-yazma bilmeyen`:`Acik Ogretim`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(education_data)\n\n# Evlilik durumu verisini yükleme\nmarital_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nmarital_data &lt;- marital_data[,-2]  # İkinci sütunu kaldır\ncolnames(marital_data) &lt;- c(\"Date\", \"Hic Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi Oldu\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nmarital_data$Year &lt;- as.integer(sub(\" .*\", \"\", marital_data$Date))\nyearly_marriage_averages &lt;- marital_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Hic Evlenmedi`:`Esi Oldu`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(marital_data)\n\n# Veri kümelerini 'Year' sütununda birleştir\ncombined_data &lt;- full_join(yearly_age_averages, yearly_education_averages, by = \"Year\") %&gt;%\n  full_join(yearly_marriage_averages, by = \"Year\")\n\n# Yaş ve evlilik durumu sütunlarını seç ve korelasyon hesapla\nage_marital_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Evlendi|Bosandi|Esi Oldu\", names(combined_data))], use = \"complete.obs\")\n\n# Yaş ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nage_education_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Evlilik ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nmarital_education_correlation &lt;- cor(combined_data[grepl(\"Evlendi|Bosandi|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Korelasyonları görselleştirme\nlibrary(corrplot)\n\n# Yaş ve evlilik durumu korelasyonlarını görselleştirme\ncorrplot(age_marital_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Yaş ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(age_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Evlilik ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(marital_education_correlation, method = \"circle\")",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#egitim-durumuna-göre",
    "href": "portfolyo/Calisma2/calisma2.html#egitim-durumuna-göre",
    "title": "Proje",
    "section": "10.2 Egitim Durumuna Göre",
    "text": "10.2 Egitim Durumuna Göre\nBu kod, eğitim durumuna göre yıllık ortalama işsizlik oranlarını analiz etmek ve görselleştirmek için etkili bir yol sağlar.\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2 kütüphaneleri yüklenir. Veri Okuma ve Düzenleme:\nread_excel fonksiyonu kullanılarak Egitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılarak Year sütunu eklenir. Yıllık Ortalamaların Hesaplanması:\nHer eğitim kategorisi için yıllık ortalamalar hesaplanır. Verilerin Uzun Formatta Düzenlenmesi:\npivot_longer fonksiyonu kullanılarak veriler yeniden şekillendirilir. Bu adım, eğitim durumuna göre ortalama işsizlik oranlarını daha kolay görselleştirebilmek için gereklidir. Görselleştirme:\nggplot2 kullanılarak yıllık ortalama işsizlik oranları, eğitim durumu ve yıl bazında görselleştirilir. Bar grafikler kullanılarak farklı eğitim durumları arasındaki işsizlik oranları karşılaştırılır. Grafikler estetik ve okunabilir olması için çeşitli temalar ve ayarlar eklenir.\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Dosya yolunu düzenleyerek okuma işlemi\neducation_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu atlayarak verileri düzenleme\neducation_data &lt;- education_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(education_data) &lt;- c(\"Date\", \"Okuma_yazma_bilmeyen\", \"Okuma_yazma_bilen_fakat_bir_okul_bitirmeyen\", \"Ilkokul\", \"Ortaokul_veya_dengi_meslek_okul\", \"Genel_lise\", \"Lise_dengi_meslek_okul\", \"Yuksekokul_veya_fakulte\", \"Acik_Ogretim\")\n\n# Yıl bilgisini Tarih sütunundan çıkarma\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\n\n# Her eğitim kategorisi için yıllık ortalamaları hesaplama\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma_yazma_bilmeyen`:`Acik_Ogretim`, mean, na.rm = TRUE))\n\n# Verileri yeniden şekillendirme\nyearly_education_long &lt;- yearly_education_averages %&gt;%\n  pivot_longer(cols = `Okuma_yazma_bilmeyen`:`Acik_Ogretim`, names_to = \"Education_Status\", values_to = \"Average_Unemployment_Rate\")\n\n# Yıllık ortalama işsizlik oranlarını eğitim durumu ve yıl bazında görselleştirme\nggplot(yearly_education_long, aes(x = Education_Status, y = Average_Unemployment_Rate, fill = Education_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  labs(title = \"Yıllık Ortalama İşsizlik Oranları ve Eğitim Durumu\", x = \"Eğitim Durumu\", y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#evlilik-durumuna-göre",
    "href": "portfolyo/Calisma2/calisma2.html#evlilik-durumuna-göre",
    "title": "Proje",
    "section": "10.3 Evlilik Durumuna Göre",
    "text": "10.3 Evlilik Durumuna Göre\nExcel dosyasından evlilik durumlarına ilişkin verileri okuyarak yıllık ortalama oranları hesaplar ve ardından bu oranları bir bar grafiğinde görselleştirir.\nGerekli kütüphaneleri yükleme: İlk olarak, R’de kullanacağınız bazı kütüphaneleri yüklüyorsunuz. Bu kütüphaneler veri işleme ve görselleştirme için kullanılır.\nExcel dosyasından veri alma: Belirtilen Excel dosyasından verileri okuyorsunuz. Bu veriler, evlilik durumlarına ilişkin olabilir.\nVeri setini düzenleme: Okunan veri setini düzenliyorsunuz. Örneğin, gereksiz sütunları çıkarıyorsunuz ve sütunlara anlamlı isimler veriyorsunuz.\nVerileri analiz için hazırlama: Analiz yapmak için verileri hazırlıyorsunuz. Örneğin, tarih verisinden yıl bilgisini çıkararak analiz için kullanıma uygun hale getiriyorsunuz.\nOrtalama hesaplama: Her yıl için evlilik durumu oranlarının ortalamasını hesaplıyorsunuz. Bu, yıllık evlilik trendlerini görmek için önemlidir.\nVeriyi uzun formata dönüştürme: Veriyi görselleştirmek için uzun formata dönüştürüyorsunuz. Bu, veriyi daha iyi bir şekilde görselleştirmenize olanak tanır.\nVeriyi görselleştirme: Son olarak, yıllık evlilik durumu oranlarını görselleştiriyorsunuz. Bu genellikle bar grafikleri kullanılarak yapılır ve trendleri daha açık bir şekilde gösterir.\n\n# Gerekli kütüphaneleri yükleme\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Excel dosyasından veri alma\nmarriage_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu çıkarma\nmarriage_data &lt;- marriage_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(marriage_data) &lt;- c(\"Date\", \"Hic_Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi_Oldu\")\n\n# Tarih sütunundan yılı çıkarma\nmarriage_data$Year &lt;- as.integer(sub(\" .*\", \"\", marriage_data$Date))\n\n# Her evlilik durumu için yıllık ortalamaları hesaplama\nyearly_marriage_averages &lt;- marriage_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(Hic_Evlenmedi:Esi_Oldu, mean, na.rm = TRUE))\n\n# Verileri grafik için uzun formata dönüştürme\nyearly_marriage_long &lt;- yearly_marriage_averages %&gt;%\n  pivot_longer(cols = Hic_Evlenmedi:Esi_Oldu, names_to = \"Marital_Status\", values_to = \"Average_Rate\")\n\n# Yıllık ortalama oranları yıl ve evlilik durumu bazında görselleştirme\nggplot(yearly_marriage_long, aes(x = as.factor(Year), y = Average_Rate, fill = Marital_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = sprintf(\"%.1f\", Average_Rate)), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +\n  labs(title = \"Evlilik Durumuna Göre Yıllık Ortalama Oranlar\", x = \"Yıl\", y = \"Ortalama Oran (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yaş-grubuna-göre",
    "href": "portfolyo/Calisma2/calisma2.html#yaş-grubuna-göre",
    "title": "Proje",
    "section": "10.4 Yaş Grubuna Göre",
    "text": "10.4 Yaş Grubuna Göre\nExcel dosyasından işsizlik verilerini okur, her yaş grubu için ortalama işsizlik oranını hesaplar ve ggplot2 kullanarak her yaş grubu için ortalama işsizlik oranlarını çizer.\n\nlibrary(readxl)\n# Load the data, assuming the file path is correct and the sheet is named appropriately\n# Ensure to replace with the actual path and type it directly here\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Calculating the average unemployment rate for each age group\nage_group_averages &lt;- unemployment_data %&gt;%\n  select(-Date) %&gt;%  # Exclude the Date for calculation\n  summarise(across(everything(), mean, na.rm = TRUE)) %&gt;%  # Calculate mean, ignoring NA values\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Age_Group\",\n    values_to = \"Average_Unemployment_Rate\"\n  )\n\n# Plotting the average unemployment rates for each age group\nggplot(age_group_averages, aes(x = Age_Group, y = Average_Unemployment_Rate, fill = Age_Group)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Yaş gruplarına göre Ortalama İşsizlik Oranı\", x = \"Yaş Grubu\", y = \"Ortalama İşsizlik Oranı\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yıl-bazında-ama-eğitim_kod",
    "href": "portfolyo/Calisma2/calisma2.html#yıl-bazında-ama-eğitim_kod",
    "title": "Çalışma 2",
    "section": "Yıl Bazında Ama Eğitim_Kod",
    "text": "Yıl Bazında Ama Eğitim_Kod",
    "crumbs": [
      "Ödevler",
      "Çalışma 2"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yıl-bazında_kod",
    "href": "portfolyo/Calisma2/calisma2.html#yıl-bazında_kod",
    "title": "Proje",
    "section": "10.5 Yıl Bazında_Kod",
    "text": "10.5 Yıl Bazında_Kod\nExcel dosyasından işsizlik verilerini okuyup yıllara göre yaş gruplarının ortalama işsizlik oranlarını hesaplar ve bu verileri çubuk grafikle görselleştirir.\nİlk olarak, dplyr ve ggplot2 kütüphaneleri yüklenir. Ardından, belirtilen Excel dosyasından veriler okunur ve gereksiz ikinci sütun düşürülür. Sütun isimleri, yaş gruplarını doğrudan temsil ettiği varsayılarak ayarlanır. Tarih bilgisinden yıl bilgisi çıkarılır ve yeni bir “Year” (Yıl) sütunu oluşturulur. Her yıl için tüm yaş gruplarının ortalama işsizlik oranı hesaplanır. Son olarak, yıllara göre ortalama işsizlik oranları, çubuk grafik kullanılarak görselleştirilir. Görsel, her yılın ortalama işsizlik oranını gösterir ve çubukların renkleri yılları temsil eder. Bu şekilde, yıllara göre işsizlik oranlarının değişimini kolayca görebilirsiniz.\n\nlibrary(dplyr)\nlibrary(ggplot2)\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\n# Extract the year as an integer\nunemployment_data$Year &lt;- as.integer(sub(\" .*\", \"\", unemployment_data$Date))\n\n# Calculate the average unemployment rate for all age groups combined for each year\nannual_averages &lt;- unemployment_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(Average_Unemployment_Rate = mean(c_across(`15-19`:`65+`), na.rm = TRUE))\n\n# Plotting the average unemployment rates by year using a bar graph\nggplot(annual_averages, aes(x = as.factor(Year), y = Average_Unemployment_Rate, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", width = 0.7) +  # Using bars to represent the average rates\n  scale_fill_brewer(palette = \"Paired\") +  # Optional: adds color using a color palette\n  labs(title = \"Bütün Yaş gruplarının yıl bazında İşsizlik Oranı\", \n       x = \"Yıl\", \n       y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nSpongebob Analytics GIFfrom Spongebob GIFs",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "index.html#ödevler",
    "href": "index.html#ödevler",
    "title": "Takım: KODLAR VADİSİ",
    "section": "Ödevler",
    "text": "Ödevler\nPortfolyo Sayfasını inceleyiniz.\nÇalışma 1\nÇalışma 2"
  },
  {
    "objectID": "proje.html#correletaion-kod-tasarımı",
    "href": "proje.html#correletaion-kod-tasarımı",
    "title": "Çalışma 2",
    "section": "",
    "text": "Bu kod, yaş grubu, eğitim durumu ve evlilik durumu verilerini okur, yıllık ortalamaları hesaplar ve bu veri kümeleri arasındaki korelasyonları görselleştirir. İşte kodun detaylı açıklaması:\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2, ve corrplot kütüphaneleri yüklenir.\nYaş Grubu Verisinin Yüklenmesi:\nYas_Grubu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Yaş grubu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEğitim Durumu Verisinin Yüklenmesi:\nEgitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Eğitim durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEvlilik Durumu Verisinin Yüklenmesi:\nEvlilik_Durumu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Evlilik durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nVeri Kümelerinin Birleştirilmesi:\nÜç veri kümesi Year sütunu üzerinden birleştirilir.\nKorelasyon Hesaplama ve Görselleştirme:\nYaş grubu ile evlilik durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nYaş grubu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nEvlilik durumu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nKodun tamamını çalıştırarak, yaş, eğitim ve evlilik durumu arasındaki ilişkileri görselleştirebilirsiniz. Bu görselleştirmeler, veri analizi sürecinde önemli içgörüler sağlar.\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Yaş grubu verisini yükleme\nage_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nage_data &lt;- age_data[,-2]  # İkinci sütunu kaldır\ncolnames(age_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\",\"65+\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nage_data$Year &lt;- as.integer(sub(\" .*\", \"\", age_data$Date))\nyearly_age_averages &lt;- age_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`15-19`:`65+`, mean, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(`15-19`:`65+`, mean, na.rm = TRUE)`.\nℹ In group 1: `Year = 2005`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(age_data)\n\n# Eğitim durumu verisini yükleme\neducation_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\neducation_data &lt;- education_data[,-2]  # İkinci sütunu kaldır\ncolnames(education_data) &lt;- c(\"Date\",\"Okuma-yazma bilmeyen\",\"Okuma yazma bilen fakat bir okul bitirmeyen\",  \"Ilkokul\",  \"Ortaokul veya dengi meslek okul\",  \"Genel lise\",\"Lise dengi meslek okul\"   ,\"Yuksekokul veya fakulte\", \"Acik Ogretim\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma-yazma bilmeyen`:`Acik Ogretim`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(education_data)\n\n# Evlilik durumu verisini yükleme\nmarital_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nmarital_data &lt;- marital_data[,-2]  # İkinci sütunu kaldır\ncolnames(marital_data) &lt;- c(\"Date\", \"Hic Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi Oldu\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nmarital_data$Year &lt;- as.integer(sub(\" .*\", \"\", marital_data$Date))\nyearly_marriage_averages &lt;- marital_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Hic Evlenmedi`:`Esi Oldu`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(marital_data)\n\n# Veri kümelerini 'Year' sütununda birleştir\ncombined_data &lt;- full_join(yearly_age_averages, yearly_education_averages, by = \"Year\") %&gt;%\n  full_join(yearly_marriage_averages, by = \"Year\")\n\n# Yaş ve evlilik durumu sütunlarını seç ve korelasyon hesapla\nage_marital_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Evlendi|Bosandi|Esi Oldu\", names(combined_data))], use = \"complete.obs\")\n\n# Yaş ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nage_education_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Evlilik ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nmarital_education_correlation &lt;- cor(combined_data[grepl(\"Evlendi|Bosandi|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Korelasyonları görselleştirme\nlibrary(corrplot)\n\n# Yaş ve evlilik durumu korelasyonlarını görselleştirme\ncorrplot(age_marital_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Yaş ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(age_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Evlilik ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(marital_education_correlation, method = \"circle\")"
  },
  {
    "objectID": "proje.html#egitim-durumuna-göre",
    "href": "proje.html#egitim-durumuna-göre",
    "title": "Çalışma 2",
    "section": "",
    "text": "Bu kod, eğitim durumuna göre yıllık ortalama işsizlik oranlarını analiz etmek ve görselleştirmek için etkili bir yol sağlar.\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2 kütüphaneleri yüklenir. Veri Okuma ve Düzenleme:\nread_excel fonksiyonu kullanılarak Egitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılarak Year sütunu eklenir. Yıllık Ortalamaların Hesaplanması:\nHer eğitim kategorisi için yıllık ortalamalar hesaplanır. Verilerin Uzun Formatta Düzenlenmesi:\npivot_longer fonksiyonu kullanılarak veriler yeniden şekillendirilir. Bu adım, eğitim durumuna göre ortalama işsizlik oranlarını daha kolay görselleştirebilmek için gereklidir. Görselleştirme:\nggplot2 kullanılarak yıllık ortalama işsizlik oranları, eğitim durumu ve yıl bazında görselleştirilir. Bar grafikler kullanılarak farklı eğitim durumları arasındaki işsizlik oranları karşılaştırılır. Grafikler estetik ve okunabilir olması için çeşitli temalar ve ayarlar eklenir.\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Dosya yolunu düzenleyerek okuma işlemi\neducation_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu atlayarak verileri düzenleme\neducation_data &lt;- education_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(education_data) &lt;- c(\"Date\", \"Okuma_yazma_bilmeyen\", \"Okuma_yazma_bilen_fakat_bir_okul_bitirmeyen\", \"Ilkokul\", \"Ortaokul_veya_dengi_meslek_okul\", \"Genel_lise\", \"Lise_dengi_meslek_okul\", \"Yuksekokul_veya_fakulte\", \"Acik_Ogretim\")\n\n# Yıl bilgisini Tarih sütunundan çıkarma\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\n\n# Her eğitim kategorisi için yıllık ortalamaları hesaplama\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma_yazma_bilmeyen`:`Acik_Ogretim`, mean, na.rm = TRUE))\n\n# Verileri yeniden şekillendirme\nyearly_education_long &lt;- yearly_education_averages %&gt;%\n  pivot_longer(cols = `Okuma_yazma_bilmeyen`:`Acik_Ogretim`, names_to = \"Education_Status\", values_to = \"Average_Unemployment_Rate\")\n\n# Yıllık ortalama işsizlik oranlarını eğitim durumu ve yıl bazında görselleştirme\nggplot(yearly_education_long, aes(x = Education_Status, y = Average_Unemployment_Rate, fill = Education_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  labs(title = \"Yıllık Ortalama İşsizlik Oranları ve Eğitim Durumu\", x = \"Eğitim Durumu\", y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")"
  },
  {
    "objectID": "proje.html#evlilik-durumuna-göre",
    "href": "proje.html#evlilik-durumuna-göre",
    "title": "Çalışma 2",
    "section": "",
    "text": "Excel dosyasından evlilik durumlarına ilişkin verileri okuyarak yıllık ortalama oranları hesaplar ve ardından bu oranları bir bar grafiğinde görselleştirir.\nGerekli kütüphaneleri yükleme: İlk olarak, R’de kullanacağınız bazı kütüphaneleri yüklüyorsunuz. Bu kütüphaneler veri işleme ve görselleştirme için kullanılır.\nExcel dosyasından veri alma: Belirtilen Excel dosyasından verileri okuyorsunuz. Bu veriler, evlilik durumlarına ilişkin olabilir.\nVeri setini düzenleme: Okunan veri setini düzenliyorsunuz. Örneğin, gereksiz sütunları çıkarıyorsunuz ve sütunlara anlamlı isimler veriyorsunuz.\nVerileri analiz için hazırlama: Analiz yapmak için verileri hazırlıyorsunuz. Örneğin, tarih verisinden yıl bilgisini çıkararak analiz için kullanıma uygun hale getiriyorsunuz.\nOrtalama hesaplama: Her yıl için evlilik durumu oranlarının ortalamasını hesaplıyorsunuz. Bu, yıllık evlilik trendlerini görmek için önemlidir.\nVeriyi uzun formata dönüştürme: Veriyi görselleştirmek için uzun formata dönüştürüyorsunuz. Bu, veriyi daha iyi bir şekilde görselleştirmenize olanak tanır.\nVeriyi görselleştirme: Son olarak, yıllık evlilik durumu oranlarını görselleştiriyorsunuz. Bu genellikle bar grafikleri kullanılarak yapılır ve trendleri daha açık bir şekilde gösterir.\n\n# Gerekli kütüphaneleri yükleme\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Excel dosyasından veri alma\nmarriage_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu çıkarma\nmarriage_data &lt;- marriage_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(marriage_data) &lt;- c(\"Date\", \"Hic_Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi_Oldu\")\n\n# Tarih sütunundan yılı çıkarma\nmarriage_data$Year &lt;- as.integer(sub(\" .*\", \"\", marriage_data$Date))\n\n# Her evlilik durumu için yıllık ortalamaları hesaplama\nyearly_marriage_averages &lt;- marriage_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(Hic_Evlenmedi:Esi_Oldu, mean, na.rm = TRUE))\n\n# Verileri grafik için uzun formata dönüştürme\nyearly_marriage_long &lt;- yearly_marriage_averages %&gt;%\n  pivot_longer(cols = Hic_Evlenmedi:Esi_Oldu, names_to = \"Marital_Status\", values_to = \"Average_Rate\")\n\n# Yıllık ortalama oranları yıl ve evlilik durumu bazında görselleştirme\nggplot(yearly_marriage_long, aes(x = as.factor(Year), y = Average_Rate, fill = Marital_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = sprintf(\"%.1f\", Average_Rate)), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +\n  labs(title = \"Evlilik Durumuna Göre Yıllık Ortalama Oranlar\", x = \"Yıl\", y = \"Ortalama Oran (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")"
  },
  {
    "objectID": "proje.html#yaş-grubuna-göre",
    "href": "proje.html#yaş-grubuna-göre",
    "title": "Çalışma 2",
    "section": "",
    "text": "Excel dosyasından işsizlik verilerini okur, her yaş grubu için ortalama işsizlik oranını hesaplar ve ggplot2 kullanarak her yaş grubu için ortalama işsizlik oranlarını çizer.\n\nlibrary(readxl)\n# Load the data, assuming the file path is correct and the sheet is named appropriately\n# Ensure to replace with the actual path and type it directly here\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Calculating the average unemployment rate for each age group\nage_group_averages &lt;- unemployment_data %&gt;%\n  select(-Date) %&gt;%  # Exclude the Date for calculation\n  summarise(across(everything(), mean, na.rm = TRUE)) %&gt;%  # Calculate mean, ignoring NA values\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Age_Group\",\n    values_to = \"Average_Unemployment_Rate\"\n  )\n\n# Plotting the average unemployment rates for each age group\nggplot(age_group_averages, aes(x = Age_Group, y = Average_Unemployment_Rate, fill = Age_Group)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Yaş gruplarına göre Ortalama İşsizlik Oranı\", x = \"Yaş Grubu\", y = \"Ortalama İşsizlik Oranı\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "proje.html#yıl-bazında_kod",
    "href": "proje.html#yıl-bazında_kod",
    "title": "Çalışma 2",
    "section": "",
    "text": "Excel dosyasından işsizlik verilerini okuyup yıllara göre yaş gruplarının ortalama işsizlik oranlarını hesaplar ve bu verileri çubuk grafikle görselleştirir.\nİlk olarak, dplyr ve ggplot2 kütüphaneleri yüklenir. Ardından, belirtilen Excel dosyasından veriler okunur ve gereksiz ikinci sütun düşürülür. Sütun isimleri, yaş gruplarını doğrudan temsil ettiği varsayılarak ayarlanır. Tarih bilgisinden yıl bilgisi çıkarılır ve yeni bir “Year” (Yıl) sütunu oluşturulur. Her yıl için tüm yaş gruplarının ortalama işsizlik oranı hesaplanır. Son olarak, yıllara göre ortalama işsizlik oranları, çubuk grafik kullanılarak görselleştirilir. Görsel, her yılın ortalama işsizlik oranını gösterir ve çubukların renkleri yılları temsil eder. Bu şekilde, yıllara göre işsizlik oranlarının değişimini kolayca görebilirsiniz.\n\nlibrary(dplyr)\nlibrary(ggplot2)\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\n# Extract the year as an integer\nunemployment_data$Year &lt;- as.integer(sub(\" .*\", \"\", unemployment_data$Date))\n\n# Calculate the average unemployment rate for all age groups combined for each year\nannual_averages &lt;- unemployment_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(Average_Unemployment_Rate = mean(c_across(`15-19`:`65+`), na.rm = TRUE))\n\n# Plotting the average unemployment rates by year using a bar graph\nggplot(annual_averages, aes(x = as.factor(Year), y = Average_Unemployment_Rate, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", width = 0.7) +  # Using bars to represent the average rates\n  scale_fill_brewer(palette = \"Paired\") +  # Optional: adds color using a color palette\n  labs(title = \"Bütün Yaş gruplarının yıl bazında İşsizlik Oranı\", \n       x = \"Yıl\", \n       y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nfrom"
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#korelasyon-kod-tasarımı",
    "href": "portfolyo/Calisma2/calisma2.html#korelasyon-kod-tasarımı",
    "title": "Proje",
    "section": "7.1 Korelasyon Kod Tasarımı",
    "text": "7.1 Korelasyon Kod Tasarımı\nBu kod, yaş grubu, eğitim durumu ve evlilik durumu verilerini okur, yıllık ortalamaları hesaplar ve bu veri kümeleri arasındaki korelasyonları görselleştirir. İşte kodun detaylı açıklaması:\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2, ve corrplot kütüphaneleri yüklenir.\nYaş Grubu Verisinin Yüklenmesi:\nYas_Grubu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Yaş grubu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEğitim Durumu Verisinin Yüklenmesi:\nEgitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Eğitim durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nEvlilik Durumu Verisinin Yüklenmesi:\nEvlilik_Durumu_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılır ve Year sütunu eklenir. Evlilik durumu verileri yıllık ortalamalar olarak özetlenir ve temizlenir.\nVeri Kümelerinin Birleştirilmesi:\nÜç veri kümesi Year sütunu üzerinden birleştirilir.\nKorelasyon Hesaplama ve Görselleştirme:\nYaş grubu ile evlilik durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nYaş grubu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nEvlilik durumu ile eğitim durumu arasındaki korelasyon hesaplanır ve görselleştirilir.\nKodun tamamını çalıştırarak, yaş, eğitim ve evlilik durumu arasındaki ilişkileri görselleştirebilirsiniz. Bu görselleştirmeler, veri analizi sürecinde önemli içgörüler sağlar.\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(corrplot)\n\ncorrplot 0.92 loaded\n\n# Yaş grubu verisini yükleme\nage_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nage_data &lt;- age_data[,-2]  # İkinci sütunu kaldır\ncolnames(age_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\",\"65+\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nage_data$Year &lt;- as.integer(sub(\" .*\", \"\", age_data$Date))\nyearly_age_averages &lt;- age_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`15-19`:`65+`, mean, na.rm = TRUE))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `across(`15-19`:`65+`, mean, na.rm = TRUE)`.\nℹ In group 1: `Year = 2005`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(age_data)\n\n# Eğitim durumu verisini yükleme\neducation_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\neducation_data &lt;- education_data[,-2]  # İkinci sütunu kaldır\ncolnames(education_data) &lt;- c(\"Date\",\"Okuma-yazma bilmeyen\",\"Okuma yazma bilen fakat bir okul bitirmeyen\",  \"Ilkokul\",  \"Ortaokul veya dengi meslek okul\",  \"Genel lise\",\"Lise dengi meslek okul\"   ,\"Yuksekokul veya fakulte\", \"Acik Ogretim\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma-yazma bilmeyen`:`Acik Ogretim`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(education_data)\n\n# Evlilik durumu verisini yükleme\nmarital_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nmarital_data &lt;- marital_data[,-2]  # İkinci sütunu kaldır\ncolnames(marital_data) &lt;- c(\"Date\", \"Hic Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi Oldu\")\n\n# Yılı çıkar ve yıllık ortalamaları hesapla\nmarital_data$Year &lt;- as.integer(sub(\" .*\", \"\", marital_data$Date))\nyearly_marriage_averages &lt;- marital_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Hic Evlenmedi`:`Esi Oldu`, mean, na.rm = TRUE))\n\n# Çalışma alanını temizle\nrm(marital_data)\n\n# Veri kümelerini 'Year' sütununda birleştir\ncombined_data &lt;- full_join(yearly_age_averages, yearly_education_averages, by = \"Year\") %&gt;%\n  full_join(yearly_marriage_averages, by = \"Year\")\n\n# Yaş ve evlilik durumu sütunlarını seç ve korelasyon hesapla\nage_marital_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Evlendi|Bosandi|Esi Oldu\", names(combined_data))], use = \"complete.obs\")\n\n# Yaş ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nage_education_correlation &lt;- cor(combined_data[grepl(\"15-19|20-24|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Evlilik ve eğitim durumu sütunlarını seç ve korelasyon hesapla\nmarital_education_correlation &lt;- cor(combined_data[grepl(\"Evlendi|Bosandi|Yuksekokul veya fakulte|Acik Ogretim\", names(combined_data))], use = \"complete.obs\")\n\n# Korelasyonları görselleştirme\nlibrary(corrplot)\n\n# Yaş ve evlilik durumu korelasyonlarını görselleştirme\ncorrplot(age_marital_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Yaş ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(age_education_correlation, method = \"circle\")\n\n\n\n\n\n\n\n# Evlilik ve eğitim durumu korelasyonlarını görselleştirme\ncorrplot(marital_education_correlation, method = \"circle\")",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#eğitim-durumuna-göre-analiz",
    "href": "portfolyo/Calisma2/calisma2.html#eğitim-durumuna-göre-analiz",
    "title": "Proje",
    "section": "7.2 Eğitim Durumuna Göre Analiz",
    "text": "7.2 Eğitim Durumuna Göre Analiz\nBu kod, eğitim durumuna göre yıllık ortalama işsizlik oranlarını analiz etmek ve görselleştirmek için etkili bir yol sağlar.\nKütüphanelerin Yüklenmesi:\nreadxl, dplyr, tidyr, ggplot2 kütüphaneleri yüklenir. Veri Okuma ve Düzenleme:\nread_excel fonksiyonu kullanılarak Egitim_Durum_VS.xlsx dosyasındaki veri okunur. İkinci sütun kaldırılır ve sütun adları güncellenir. Date sütunundan yıl bilgisi çıkarılarak Year sütunu eklenir. Yıllık Ortalamaların Hesaplanması:\nHer eğitim kategorisi için yıllık ortalamalar hesaplanır. Verilerin Uzun Formatta Düzenlenmesi:\npivot_longer fonksiyonu kullanılarak veriler yeniden şekillendirilir. Bu adım, eğitim durumuna göre ortalama işsizlik oranlarını daha kolay görselleştirebilmek için gereklidir. Görselleştirme:\nggplot2 kullanılarak yıllık ortalama işsizlik oranları, eğitim durumu ve yıl bazında görselleştirilir. Bar grafikler kullanılarak farklı eğitim durumları arasındaki işsizlik oranları karşılaştırılır. Grafikler estetik ve okunabilir olması için çeşitli temalar ve ayarlar eklenir.\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Dosya yolunu düzenleyerek okuma işlemi\neducation_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Egitim_Durum_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu atlayarak verileri düzenleme\neducation_data &lt;- education_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(education_data) &lt;- c(\"Date\", \"Okuma_yazma_bilmeyen\", \"Okuma_yazma_bilen_fakat_bir_okul_bitirmeyen\", \"Ilkokul\", \"Ortaokul_veya_dengi_meslek_okul\", \"Genel_lise\", \"Lise_dengi_meslek_okul\", \"Yuksekokul_veya_fakulte\", \"Acik_Ogretim\")\n\n# Yıl bilgisini Tarih sütunundan çıkarma\neducation_data$Year &lt;- as.integer(sub(\" .*\", \"\", education_data$Date))\n\n# Her eğitim kategorisi için yıllık ortalamaları hesaplama\nyearly_education_averages &lt;- education_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(`Okuma_yazma_bilmeyen`:`Acik_Ogretim`, mean, na.rm = TRUE))\n\n# Verileri yeniden şekillendirme\nyearly_education_long &lt;- yearly_education_averages %&gt;%\n  pivot_longer(cols = `Okuma_yazma_bilmeyen`:`Acik_Ogretim`, names_to = \"Education_Status\", values_to = \"Average_Unemployment_Rate\")\n\n# Yıllık ortalama işsizlik oranlarını eğitim durumu ve yıl bazında görselleştirme\nggplot(yearly_education_long, aes(x = Education_Status, y = Average_Unemployment_Rate, fill = Education_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  labs(title = \"Yıllık Ortalama İşsizlik Oranları ve Eğitim Durumu\", x = \"Eğitim Durumu\", y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#evlilik-durumuna-göre-analiz",
    "href": "portfolyo/Calisma2/calisma2.html#evlilik-durumuna-göre-analiz",
    "title": "Proje",
    "section": "7.3 Evlilik Durumuna Göre Analiz",
    "text": "7.3 Evlilik Durumuna Göre Analiz\nExcel dosyasından evlilik durumlarına ilişkin verileri okuyarak yıllık ortalama oranları hesaplar ve ardından bu oranları bir bar grafiğinde görselleştirir.\nGerekli kütüphaneleri yükleme: İlk olarak, R’de kullanacağınız bazı kütüphaneleri yüklüyorsunuz. Bu kütüphaneler veri işleme ve görselleştirme için kullanılır.\nExcel dosyasından veri alma: Belirtilen Excel dosyasından verileri okuyorsunuz. Bu veriler, evlilik durumlarına ilişkin olabilir.\nVeri setini düzenleme: Okunan veri setini düzenliyorsunuz. Örneğin, gereksiz sütunları çıkarıyorsunuz ve sütunlara anlamlı isimler veriyorsunuz.\nVerileri analiz için hazırlama: Analiz yapmak için verileri hazırlıyorsunuz. Örneğin, tarih verisinden yıl bilgisini çıkararak analiz için kullanıma uygun hale getiriyorsunuz.\nOrtalama hesaplama: Her yıl için evlilik durumu oranlarının ortalamasını hesaplıyorsunuz. Bu, yıllık evlilik trendlerini görmek için önemlidir.\nVeriyi uzun formata dönüştürme: Veriyi görselleştirmek için uzun formata dönüştürüyorsunuz. Bu, veriyi daha iyi bir şekilde görselleştirmenize olanak tanır.\nVeriyi görselleştirme: Son olarak, yıllık evlilik durumu oranlarını görselleştiriyorsunuz. Bu genellikle bar grafikleri kullanılarak yapılır ve trendleri daha açık bir şekilde gösterir.\n\n# Gerekli kütüphaneleri yükleme\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n# Excel dosyasından veri alma\nmarriage_data &lt;- read_excel(\"C:/Users/parad/Documents/GitHub/muy665-bahar2024-takim-kodlar-vadisi/portfolyo/Calisma2/Calisma2VeriSet/Evlilik_Durumu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n# İkinci sütunu çıkarma\nmarriage_data &lt;- marriage_data[,-2]\n\n# Sütun adlarını belirleme\ncolnames(marriage_data) &lt;- c(\"Date\", \"Hic_Evlenmedi\", \"Evlendi\", \"Bosandi\", \"Esi_Oldu\")\n\n# Tarih sütunundan yılı çıkarma\nmarriage_data$Year &lt;- as.integer(sub(\" .*\", \"\", marriage_data$Date))\n\n# Her evlilik durumu için yıllık ortalamaları hesaplama\nyearly_marriage_averages &lt;- marriage_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(across(Hic_Evlenmedi:Esi_Oldu, mean, na.rm = TRUE))\n\n# Verileri grafik için uzun formata dönüştürme\nyearly_marriage_long &lt;- yearly_marriage_averages %&gt;%\n  pivot_longer(cols = Hic_Evlenmedi:Esi_Oldu, names_to = \"Marital_Status\", values_to = \"Average_Rate\")\n\n# Yıllık ortalama oranları yıl ve evlilik durumu bazında görselleştirme\nggplot(yearly_marriage_long, aes(x = as.factor(Year), y = Average_Rate, fill = Marital_Status)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_text(aes(label = sprintf(\"%.1f\", Average_Rate)), position = position_dodge(width = 0.9), vjust = -0.3, size = 3) +\n  labs(title = \"Evlilik Durumuna Göre Yıllık Ortalama Oranlar\", x = \"Yıl\", y = \"Ortalama Oran (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\")",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yaş-grubuna-göre-analiz",
    "href": "portfolyo/Calisma2/calisma2.html#yaş-grubuna-göre-analiz",
    "title": "Proje",
    "section": "7.4 Yaş Grubuna Göre Analiz",
    "text": "7.4 Yaş Grubuna Göre Analiz\nExcel dosyasından işsizlik verilerini okur, her yaş grubu için ortalama işsizlik oranını hesaplar ve ggplot2 kullanarak her yaş grubu için ortalama işsizlik oranlarını çizer.\n\nlibrary(readxl)\n# Load the data, assuming the file path is correct and the sheet is named appropriately\n# Ensure to replace with the actual path and type it directly here\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Calculating the average unemployment rate for each age group\nage_group_averages &lt;- unemployment_data %&gt;%\n  select(-Date) %&gt;%  # Exclude the Date for calculation\n  summarise(across(everything(), mean, na.rm = TRUE)) %&gt;%  # Calculate mean, ignoring NA values\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Age_Group\",\n    values_to = \"Average_Unemployment_Rate\"\n  )\n\n# Plotting the average unemployment rates for each age group\nggplot(age_group_averages, aes(x = Age_Group, y = Average_Unemployment_Rate, fill = Age_Group)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Yaş gruplarına göre Ortalama İşsizlik Oranı\", x = \"Yaş Grubu\", y = \"Ortalama İşsizlik Oranı\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  },
  {
    "objectID": "portfolyo/Calisma2/calisma2.html#yıl-bazında-analiz",
    "href": "portfolyo/Calisma2/calisma2.html#yıl-bazında-analiz",
    "title": "Proje",
    "section": "7.5 Yıl Bazında Analiz",
    "text": "7.5 Yıl Bazında Analiz\nExcel dosyasından işsizlik verilerini okuyup yıllara göre yaş gruplarının ortalama işsizlik oranlarını hesaplar ve bu verileri çubuk grafikle görselleştirir.\nİlk olarak, dplyr ve ggplot2 kütüphaneleri yüklenir. Ardından, belirtilen Excel dosyasından veriler okunur ve gereksiz ikinci sütun düşürülür. Sütun isimleri, yaş gruplarını doğrudan temsil ettiği varsayılarak ayarlanır. Tarih bilgisinden yıl bilgisi çıkarılır ve yeni bir “Year” (Yıl) sütunu oluşturulur. Her yıl için tüm yaş gruplarının ortalama işsizlik oranı hesaplanır. Son olarak, yıllara göre ortalama işsizlik oranları, çubuk grafik kullanılarak görselleştirilir. Görsel, her yılın ortalama işsizlik oranını gösterir ve çubukların renkleri yılları temsil eder. Bu şekilde, yıllara göre işsizlik oranlarının değişimini kolayca görebilirsiniz.\n\nlibrary(dplyr)\nlibrary(ggplot2)\nunemployment_data &lt;- read_excel(\"C:\\\\Users\\\\parad\\\\Documents\\\\GitHub\\\\muy665-bahar2024-takim-kodlar-vadisi\\\\portfolyo\\\\Calisma2\\\\Calisma2VeriSet\\\\Yas_Grubu_VS.xlsx\", skip = 9)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\nunemployment_data &lt;- unemployment_data[,-2]  # This drops the second column\n# Adjust path and skip rows as necessary\n# Set column names, assuming they represent age groups directly\ncolnames(unemployment_data) &lt;- c(\"Date\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65+\")\n# Extract the year as an integer\nunemployment_data$Year &lt;- as.integer(sub(\" .*\", \"\", unemployment_data$Date))\n\n# Calculate the average unemployment rate for all age groups combined for each year\nannual_averages &lt;- unemployment_data %&gt;%\n  group_by(Year) %&gt;%\n  summarise(Average_Unemployment_Rate = mean(c_across(`15-19`:`65+`), na.rm = TRUE))\n\n# Plotting the average unemployment rates by year using a bar graph\nggplot(annual_averages, aes(x = as.factor(Year), y = Average_Unemployment_Rate, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", width = 0.7) +  # Using bars to represent the average rates\n  scale_fill_brewer(palette = \"Paired\") +  # Optional: adds color using a color palette\n  labs(title = \"Bütün Yaş gruplarının yıl bazında İşsizlik Oranı\", \n       x = \"Yıl\", \n       y = \"Ortalama İşsizlik Oranı (%)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nSpongebob Analytics GIFfrom Spongebob GIFs",
    "crumbs": [
      "Ödevler",
      "Proje"
    ]
  }
]